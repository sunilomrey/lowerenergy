var EventLogger = function(a) {
    "undefined" != typeof a && null !== a && (this.application = a), window.event_store = [];
};

EventLogger.prototype = {
    ajaxUrl: "/webshared/energy_log.php",
    application: null,
    storage: null,
    timer: null,
    interval: 5,
    processing: !1
}, EventLogger.prototype.log = function(a, b, c, d) {
    var e = this;
    if ("object" == typeof JSON) {
        var f = {};
        if (f.type = a, "undefined" == typeof c) if ("object" == typeof halcyon) {
            var g = halcyon.cookie.getHUD();
            "undefined" != typeof g && "undefined" != typeof g.i ? (c = g.i, f.hailo_id = 1) : c = 0;
        } else c = 0;
        d = d ? 1 : 0, f.application = this.application, f.eventType = a, f.message = b, 
        f.eventId = c, f.eventDateTime = new Date().toUTCString(), f.host = location.hostname, 
        f.path = location.pathname, f.userAgent = null, "undefined" != typeof navigator && "undefined" != typeof navigator.userAgent && (f.userAgent = navigator.userAgent), 
        function(a, b) {
            var c = {
                type: "POST",
                url: e.ajaxUrl,
                data: {
                    data: JSON.stringify([ b ]),
                    notify: d
                }
            };
            a.ajax(c);
        }(jQuery, f);
    }
}, EventLogger.prototype.setTimer = function() {
    null === this.timer && (this.timer = setInterval(this.sendData, 1e3 * this.interval, this.ajaxUrl));
}, EventLogger.prototype.sendData = function(a) {
    if (window.event_store.length > 0 && "undefined" != typeof JSON && "function" == typeof jQuery && "function" == typeof jQuery.ajax) {
        var b = window.event_store;
        window.event_store = [], function(b, c) {
            var d = {
                url: a,
                data: {
                    data: JSON.stringify(c)
                }
            };
            b.ajax(d);
        }(jQuery, b);
    }
};

var Weather = function(a, b, c) {
    this.apiKey = a, this.city = b, this.state = c;
};

Weather.prototype = {
    apiKey: "",
    city: "",
    state: "",
    cacheKey: "",
    cacheField: "",
    getWeather: function(a) {
        var b = this;
        this.checkCache().then(function(c) {
            c === !1 ? b.makeAPIRequest().then(function(b) {
                "function" == typeof a && b !== !1 && a(b);
            }) : "function" == typeof a && a(c);
        });
    },
    setupCache: function() {
        var a = new Date();
        this.cacheKey = "es:soe:weather:" + a.getDate() + "-" + a.getMonth() + "1-" + a.getFullYear() + "-" + a.getHours(), 
        this.cacheField = this.city + ":" + this.state, this.cacheField = this.cacheField.toLowerCase();
    },
    checkCache: function() {
        var a = new $.Deferred();
        return this.setupCache(), $.ajax({
            url: "/webshared/energy/ajax/weather.php",
            data: "type=HGET&req=" + this.cacheKey + "/" + this.cacheField,
            dataType: "json",
            success: function(b) {
                a.resolve(null !== b.HGET ? b : !1);
            },
            error: function() {
                a.resolve(!1);
            }
        }), a.promise();
    },
    makeAPIRequest: function() {
        var a = this, b = new $.Deferred();
        return $.ajax({
            url: "/webshared/energy/ajax/get_weather.php?city=" + a.city + "&state=" + a.state,
            dataType: "json",
            success: function(c) {
                a.cacheData(c), b.resolve(c);
            }
        }), b.promise();
    },
    cacheData: function(a) {
        $.ajax({
            url: "/webshared/energy/ajax/weather.php",
            data: "type=HSET&req=" + this.cacheKey + "/" + this.cacheField + JSON.stringify(a),
            method: "POST",
            success: function() {}
        });
    }
}, function(a) {
    a.fn.extend({
        easyResponsiveTabs: function(b) {
            var c = {
                type: "default",
                width: "auto",
                fit: !0,
                closed: !1,
                activate: function() {}
            };
            b = a.extend(c, b);
            var d = b, e = d.type, f = d.fit, g = d.width, h = "vertical", i = "accordion", j = window.location.hash;
            !(!window.history || !history.replaceState);
            a(this).bind("tabactivate", function(a, c) {
                "function" == typeof b.activate && b.activate.call(c, a);
            }), this.each(function() {
                function c() {
                    e == h && d.addClass("resp-vtabs"), f === !0 && d.css({
                        width: "100%",
                        margin: "0px"
                    }), e == i && (d.addClass("resp-easy-accordion"), d.find(".resp-tabs-list").css("display", "none"));
                }
                var d = a(this), k = d.find("ul.resp-tabs-list"), l = d.attr("id");
                d.find("ul.resp-tabs-list li").addClass("resp-tab-item"), d.css({
                    display: "block",
                    width: g
                }), d.find(".resp-tabs-container > div").addClass("resp-tab-content"), c();
                var m;
                d.find(".resp-tab-content").before("<h2 class='resp-accordion' role='tab'><span class='resp-arrow'></span></h2>");
                var n = 0;
                d.find(".resp-accordion").each(function() {
                    m = a(this);
                    var b = d.find(".resp-tab-item:eq(" + n + ")"), c = d.find(".resp-accordion:eq(" + n + ")");
                    c.append(b.html()), c.data(b.data()), m.attr("aria-controls", "tab_item-" + n), 
                    n++;
                });
                var o, p = 0;
                d.find(".resp-tab-item").each(function() {
                    $tabItem = a(this), $tabItem.attr("aria-controls", "tab_item-" + p), $tabItem.attr("role", "tab");
                    var b = 0;
                    d.find(".resp-tab-content").each(function() {
                        o = a(this), o.attr("aria-labelledby", "tab_item-" + b), b++;
                    }), p++;
                });
                var q = 0;
                if ("" !== j) {
                    var r = j.match(new RegExp(l + "([0-9]+)"));
                    null !== r && 2 === r.length && (q = parseInt(r[1], 10) - 1, q > p && (q = 0));
                }
                a(d.find(".resp-tab-item")[q]).addClass("resp-tab-active"), b.closed === !0 || "accordion" === b.closed && !k.is(":visible") || "tabs" === b.closed && k.is(":visible") ? a(d.find(".resp-tab-content")[q]).addClass("resp-tab-content-active resp-accordion-closed") : (a(d.find(".resp-accordion")[q]).addClass("resp-tab-active"), 
                a(d.find(".resp-tab-content")[q]).addClass("resp-tab-content-active").attr("style", "display:block")), 
                d.find("[role=tab]").each(function() {
                    var b = a(this);
                    b.click(function(b) {
                        b.preventDefault();
                        var c = a(this), e = c.attr("aria-controls");
                        return c.hasClass("resp-accordion") && c.hasClass("resp-tab-active") ? (d.find(".resp-tab-content-active").slideUp("", function() {
                            a(this).addClass("resp-accordion-closed");
                        }), c.removeClass("resp-tab-active"), !1) : (!c.hasClass("resp-tab-active") && c.hasClass("resp-accordion") ? (d.find(".resp-tab-active").removeClass("resp-tab-active"), 
                        d.find(".resp-tab-content-active").slideUp().removeClass("resp-tab-content-active resp-accordion-closed"), 
                        d.find("[aria-controls=" + e + "]").addClass("resp-tab-active"), d.find(".resp-tab-content[aria-labelledby = " + e + "]").slideDown().addClass("resp-tab-content-active")) : (d.find(".resp-tab-active").removeClass("resp-tab-active"), 
                        d.find(".resp-tab-content-active").removeAttr("style").removeClass("resp-tab-content-active").removeClass("resp-accordion-closed"), 
                        d.find("[aria-controls=" + e + "]").addClass("resp-tab-active"), d.find(".resp-tab-content[aria-labelledby = " + e + "]").addClass("resp-tab-content-active").attr("style", "display:block")), 
                        void c.trigger("tabactivate", c));
                    });
                }), a(window).resize(function() {
                    d.find(".resp-accordion-closed").removeAttr("style");
                });
            });
        }
    });
}(jQuery), WebForm = function(a, b) {
    this.template = a, this.target = b, this.reasonList = {
        Information: "Information",
        "Technical Problem": "Technical Problem",
        Sales: "Sales",
        "Customer Service": "Customer Service",
        Other: "Other"
    }, this.templateUrl = "/webshared/energy/templates/webform/", this.submitUrl = "/webshared/energy/ajax/webform_submit.php", 
    this.placeHolderList = {}, this.events = {}, this.selectors = {
        reasonList: ".webform .webform-input-reason"
    }, this.successMessage = "Thank you for your submission. We will be contacting you shortly.";
}, WebForm.prototype = {
    on: function(a, b) {
        this.events[a] = b;
    },
    loading: function() {
        return "function" == typeof this.events.loading ? this.events.loading() : this;
    },
    init: function() {
        if (null === this.template) throw "Webform: Template is missing";
        if (null === $(this.target)) throw "Webform: Target is invalid";
        this.loadTemplate();
    },
    loadTemplate: function() {
        var a = this, b = {
            url: this.templateUrl + this.template,
            global: !1,
            data: {
                template: this.template
            },
            type: "post",
            success: function(b) {
                $(a.target).append(b), a.postLoad().bind();
            },
            error: function() {}
        };
        $.ajax(b);
    },
    postLoad: function() {
        var a = 0;
        for (i in this.reasonList) a++;
        if (0 === a) $(this.selectors.reasonList).parent("div").hide(); else for (i in this.reasonList) $(this.selectors.reasonList).append("<option value='" + this.reasonList[i] + "'>" + i + "</option>");
        return this;
    },
    bind: function() {
        var a = this;
        $(document).on("submit", this.target + " form", function(b) {
            b.preventDefault(), a.unbind();
            var c = {
                url: a.submitUrl,
                data: $(this).serialize() + "&Url=" + location.href + "&HostName=" + location.hostname,
                type: "post",
                dataType: "json",
                beforeSend: function() {
                    "function" == typeof a.events.loading && a.events.loading(response);
                },
                success: function(b) {
                    $(a.target).find("form").hide(), $(a.target).find(".message").removeClass("error").addClass("success").html(a.successMessage), 
                    "function" == typeof a.events.success && a.events.success(b);
                },
                error: function(b) {
                    var c = $.parseJSON(b.responseText);
                    if ("undefined" != typeof c.Message && $(a.target).find(".message").addClass("error").html(c.Message), 
                    $(a.target).find(".webform-input").removeClass("error"), "undefined" != typeof c.Fields && c.Fields.length > 0) for (var d in c.Fields) $(a.target).find(".webform-input[name='" + c.Fields[d] + "']").addClass("error");
                    "function" == typeof a.events.error && a.events.error(c);
                },
                complete: function() {
                    a.bind();
                }
            };
            $.ajax(c);
        });
    },
    unbind: function() {
        $(document).off("submit", this.target + " form");
    }
}, function(a, b, c, d) {
    "function" != typeof Object.create && (Object.create = function(a) {
        function b() {}
        return b.prototype = a, new b();
    });
    var e = {
        init: function(c, d) {
            var e = this;
            e.options = a.extend({}, a.fn.setActiveMenu.options, c), e.pathname = b.location.pathname, 
            e.pathname = e.split(e.pathname), e.pathname = e.cleanup(e.pathname), e.pathname = e.dropExtension(e.pathname), 
            e.pathname = e.lowerCase(e.pathname), e.link = a(d).find("a"), e.link.each(function() {
                e.setState(this);
            });
        },
        split: function(a) {
            return a.split("/");
        },
        cleanup: function(b) {
            return a.grep(b, function(a) {
                return "" !== a;
            });
        },
        dropExtension: function(b) {
            return a.each(b, function(a) {
                return b[a] = b[a].substr(0, b[a].lastIndexOf(".")) || b[a];
            });
        },
        lowerCase: function(b) {
            return a.each(b, function(a) {
                return b[a] = b[a].toLowerCase();
            });
        },
        setState: function(b) {
            var c = this, e = a(b), f = e.attr("href"), g = c.options.parent ? e.parent() : e;
            if (f !== d) {
                f = c.split(f), f = c.cleanup(f), f = c.dropExtension(f), f = c.lowerCase(f);
                var h = 0 === f.length && 0 === c.pathname.length, i = 0 === f.length && 1 === c.pathname.length && "index" === c.pathname[0];
                if (h || i) return g.addClass(c.options.indicator);
                var j = f[f.length - 1];
                return a.each(c.pathname, function(a, b) {
                    return j === b ? g.addClass(c.options.indicator) : void 0;
                });
            }
        }
    };
    a.fn.setActiveMenu = function(a) {
        return this.each(function() {
            var b = Object.create(e);
            b.init(a, this);
        });
    }, a.fn.setActiveMenu.options = {
        parent: !0,
        indicator: "active"
    };
}(jQuery, window, document), function(a) {
    "use strict";
    function b() {
        var b = !1;
        return function(a) {
            (/(android|ipad|playbook|silk|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0, 4))) && (b = !0);
        }(navigator.userAgent || navigator.vendor || a.opera), b;
    }
    function c(a) {
        this.el = a, this._init();
    }
    c.prototype = {
        _init: function() {
            if (this.trigger = this.el.querySelector("a.gn-icon-menu"), this.trigger) this.menu = this.el.querySelector("nav.gn-menu-wrapper"), 
            this.menuAnchor = this.el.querySelectorAll("nav.gn-menu-wrapper a"), this.helpPanel = document.querySelector("#gn-open-more-panel"), 
            this.filterOption = this.el.querySelector("#filter"), this.filterList = $("#js-filter-panel"), 
            this.filterSelect = this.el.querySelectorAll("#filter-select a"), this.search = this.el.querySelector(".gn-search-item"), 
            this.isMenuOpen = !1, this.eventtype = b() ? "touchstart" : "click", this._openIconMenu(), 
            this._initEvents();
        },
        _initEvents: function() {
            var a = this;
            if (!b()) if (this.trigger.addEventListener ? this.trigger.addEventListener("mouseover", function() {
                a._openIconMenu();
            }) : this.trigger.attachEvent("mouseover", function() {
                a._openIconMenu();
            }), Array.prototype.forEach) Array.prototype.forEach.call(this.menuAnchor, function(b) {
                b.addEventListener("mouseover", function() {
                    a._openMenu();
                }, !1), b.addEventListener("mouseout", function() {
                    a._closeMenu();
                }, !1);
            }); else {
                var c = $("nav.gn-menu-wrapper a");
                c.on("mouseover", function() {
                    a._openMenu();
                }), c.on("mouseout", function() {
                    a._closeMenu();
                }), c.on("click", function(b) {
                    return b.preventDefault(), console.log($(this)), $(this).parent().hasClass("help-me") ? (a._closeMenu(), 
                    a._openEvenMoreMenu(), !0) : $(this).parent().hasClass("filter") ? (a._closeMenu(), 
                    a._openFilter(), !0) : void 0;
                });
            }
            $(".mobile-filter").on("click", function(b) {
                b.preventDefault(), a._closeMenu(), a._openFilter();
            }), $(".mobile-helpout").on("click", function(b) {
                b.preventDefault(), a._closeMenu(), a._openEvenMoreMenu();
            });
            $("#more-info-panel");
            $(document).on("click", ".more-info", function(b) {
                b.preventDefault(), a._openMoreInfo(), a._shiftGrid();
            }), this.menu.addEventListener ? this.menu.addEventListener(this.eventtype, function(a) {
                a.stopPropagation();
            }) : this.menu.attachEvent(this.eventtype, function(a) {
                a.stopPropagation();
            });
        },
        _openIconMenu: function() {
            $(this.menu).addClass("gn-open-part");
        },
        _openEvenMoreMenu: function() {
            this._shiftGrid(), this._closeAllPanels(), $("#gn-open-more-panel").addClass("gn-open-more-panel"), 
            this._gridHeaderHide();
        },
        _closeEvenMoreMenu: function() {
            $("#gn-open-more-panel").removeClass("gn-open-more-panel"), this._unshiftGrid();
        },
        _openFilter: function() {
            this._shiftGrid(), this._closeAllPanels(), this.filterList.addClass("open"), this._gridHeaderHide();
        },
        _closeFilter: function() {
            this.filterList.removeClass("open"), this._unshiftGrid();
        },
        _shiftGrid: function() {},
        _unshiftGrid: function() {},
        _gridHeaderShow: function() {
            $(".grid-header").show();
        },
        _gridHeaderHide: function() {
            $(".grid-header").hide();
        },
        _openMenu: function() {
            this.isMenuOpen || ($(this.trigger).addClass("gn-selected"), this.isMenuOpen = !0, 
            $(this.menu).addClass("gn-open-all"));
        },
        _closeMenu: function() {
            this.isMenuOpen && ($(this.trigger).removeClass("gn-selected"), this.isMenuOpen = !1, 
            $(this.menu).removeClass("gn-open-all"));
        },
        _openMoreInfo: function() {},
        _closeMoreInfo: function() {
            $("#more-info-panel").attr("class", "more-info-panel");
        },
        _closeAllPanels: function() {
            $(".soe-grid-container").hasClass("shifted") && $(".soe-grid-container").animate({
                left: 0
            }).attr("style", "").removeClass("help-panel-open"), this._closeEvenMoreMenu(), 
            this._closeFilter(), this._closeMoreInfo(), this._gridHeaderShow();
        }
    }, a.gnMenu = c;
}(window), Lead = function(a, b) {
    this.template = a, this.target = b, this.messages = {
        fieldInvalid: "This value is invalid.",
        unknownError: "We're sorry. We are unable to process your submission. Please try again."
    }, $.extend(this.messages, window.__leadMessages__ || {});
}, Lead.prototype = {
    target: null,
    template: null,
    templateUrl: "/webshared/leads/ajax/get_template.php",
    submitUrl: "/webshared/leads/ajax/submit.php",
    image: !1,
    imageWidth: null,
    imageFontSize: null,
    imageColor: null,
    events: {},
    selectors: {},
    successMessage: "<strong>Thanks for your submission</strong><p>We'll be calling you soon with some great offers! To make our conversation as efficient as possible, please have the following items available for our call.<ul><li>All meter ESIID numbers for which you are requesting service</li><li>Your tax ID, if applicable</li><li>Previous bills if you've been at your current location for more than 3 months</li></ul></p><p>If you prefer not to wait, give us a call instead. Our energy experts will make your call a priority to quickly help you find the best energy plan to fit your business needs.</p>.",
    disclosure: "",
    fields: "",
    pageID: null,
    postClass: null,
    replacements: {},
    leadType: null,
    on: function(a, b) {
        return this.events[a] = b, this;
    },
    loading: function() {
        return "function" == typeof this.events.loading ? this.events.loading() : this;
    },
    doneLoading: function() {
        return "function" == typeof this.events.doneLoading ? this.events.doneLoading() : this;
    },
    init: function() {
        if (null === this.template) throw "Lead: Template is missing";
        if (null === $(this.target)) throw "Lead: Target is invalid";
        this.loadTemplate();
    },
    loadTemplate: function() {
        var a = this, b = {
            url: this.templateUrl,
            global: !1,
            data: {
                Template: this.template
            },
            type: "post",
            dataType: "json",
            success: function(b) {
                b = a.doReplacements(b), a.renderTemplate(b), a.postLoad(), a.bind();
            },
            error: function() {}
        };
        this.image === !0 && (b.data.DisclaimerImage = 1, null !== this.imageColor && (b.data.Color = this.imageColor), 
        null !== this.imageWidth && (b.data.Width = this.imageWidth), null !== this.imageFontSize && (b.data.FontSize = this.imageFontSize)), 
        $.ajax(b);
    },
    doReplacements: function(a) {
        var b = a.data.template;
        for (var c in this.replacements) {
            var d = "{" + c + "}", e = new RegExp(d, "g");
            b = b.replace(e, this.replacements[c]);
        }
        return a.data.template = b, a;
    },
    renderTemplate: function(a) {
        var b = this;
        $(this.target).append(a.data.template), "string" == typeof a.data.fields && $(b.target).find("form").append(a.data.fields);
        var c = "";
        return this.image === !0 && "string" == typeof a.data.disclosure_image ? c = a.data.disclosure_image : "string" == typeof a.data.disclosure && (c = a.data.disclosure), 
        c.length > 0 && ($(b.target).find("form .disclosure-text").length < 1 ? $(b.target).find("form").append("<div class='disclosure-text'>" + c + "</div>") : $(b.target).find("form .disclosure-text").html(c)), 
        this;
    },
    postLoad: function() {
        return this;
    },
    bind: function() {
        var a = this;
        "function" == typeof $.fn.parsley && $(this.target).find("form").parsley(), $(document).on("submit", this.target + " form", function(b) {
            b.preventDefault(), $(".error-container").length > 0 && $(".error-container").remove();
            var c = $(this).serialize() + "&Url=" + location.href + "&HostName=" + location.hostname + "&PageID=" + this.pageID;
            "string" == typeof a.postClass && a.postClass.length > 0 && (c += "&PostClass=" + a.postClass);
            var d = {
                url: a.submitUrl,
                data: c,
                type: "post",
                dataType: "json",
                beforeSend: function() {
                    "function" == typeof a.events.loading && a.events.loading();
                },
                success: function(b) {
                    a.reset();
                    var c = a.leadType;
                    if ("string" != typeof c ? c = "" : c += " ", 1 === b.result) "undefined" != typeof _gaq && _gaq.push([ "_trackEvent", c + "Lead", "Form Submit", "success" ]), 
                    "function" == typeof a.events.success ? a.events.success(b) : $(a.target).html(a.successMessage); else if ("object" == typeof b.data.BadFields) {
                        "undefined" != typeof _gaq && _gaq.push([ "_trackEvent", c + "Lead", "Form Submit", "error - bad fields" ]);
                        for (var d in b.data.BadFields) {
                            var e = b.data.BadFields[d];
                            $(a.target).find("[name='" + e + "']").addClass("parsley-error"), $(a.target).find("[name='" + e + "']").length > 0 && ("form" !== $(a.target).find("[name='" + e + "']").parent()[0].tagName.toLowerCase() ? $(a.target).find("[name='" + e + "']").parent().append('<ul class="parsley-error-list" style="display: block;"><li class="required" style="display: list-item;">' + a.messages.fieldInvalid + "</li></ul>") : $(a.target).find("[name='" + e + "']").after('<ul class="parsley-error-list" style="display: block;"><li class="required" style="display: list-item;">' + a.messages.fieldInvalid + "</li></ul>"), 
                            $(a.target).find("[name='" + e + "']").addClass("parsley-error"));
                        }
                        "function" == typeof a.events.validationError && a.events.validationError();
                    } else "undefined" != typeof _gaq && _gaq.push([ "_trackEvent", c + "Lead", "Form Submit", "error - unknown" ]), 
                    $(a.target + " form").prepend("<div class='error-container'>" + a.messages.unknownError + "</div>");
                },
                error: function(b) {
                    try {
                        var c = $.parseJSON(b.responseText);
                        "undefined" != typeof c.Message && $(a.target).find(".message").addClass("error").html(c.Message), 
                        "function" == typeof a.events.error && a.events.error(c);
                    } catch (d) {}
                },
                complete: function() {
                    a.doneLoading();
                }
            };
            $.ajax(d);
        });
    },
    reset: function() {
        $(this.target).find("ul.parsley-error-list").remove(), $(this.target).find("input, select").removeClass(function(a, b) {
            return (b.match(/\bparsley-\S+/g) || []).join(" ");
        });
    },
    unbind: function() {
        $(document).off("submit", this.target + " form");
    }
}, !function(a) {
    var b = function(a) {
        this.messages = {
            defaultMessage: "This value seems to be invalid.",
            type: {
                email: "This value should be a valid email.",
                url: "This value should be a valid url.",
                urlstrict: "This value should be a valid url.",
                number: "This value should be a valid number.",
                digits: "This value should be digits.",
                dateIso: "This value should be a valid date (YYYY-MM-DD).",
                alphanum: "This value should be alphanumeric.",
                phone: "This value should be a valid phone number."
            },
            notnull: "This value should not be null.",
            notblank: "This value should not be blank.",
            required: "This value is required.",
            regexp: "This value seems to be invalid.",
            min: "This value should be greater than or equal to %s.",
            max: "This value should be lower than or equal to %s.",
            range: "This value should be between %s and %s.",
            minlength: "This value is too short. It should have %s characters or more.",
            maxlength: "This value is too long. It should have %s characters or less.",
            rangelength: "This value length is invalid. It should be between %s and %s characters long.",
            mincheck: "You must select at least %s choices.",
            maxcheck: "You must select %s choices or less.",
            rangecheck: "You must select between %s and %s choices.",
            equalto: "This value should be the same."
        }, this.init(a);
    };
    b.prototype = {
        constructor: b,
        validators: {
            notnull: function(a) {
                return 0 < a.length;
            },
            notblank: function(a) {
                return "string" == typeof a && "" !== a.replace(/^\s+/g, "").replace(/\s+$/g, "");
            },
            required: function(a) {
                if ("object" == typeof a) {
                    for (var b in a) if (this.required(a[b])) return !0;
                    return !1;
                }
                return this.notnull(a) && this.notblank(a);
            },
            type: function(a, b) {
                var c;
                switch (b) {
                  case "number":
                    c = /^-?(?:\d+|\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/;
                    break;

                  case "digits":
                    c = /^\d+$/;
                    break;

                  case "alphanum":
                    c = /^\w+$/;
                    break;

                  case "email":
                    c = /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))){2,6}$/i;
                    break;

                  case "url":
                    a = /(https?|s?ftp|git)/i.test(a) ? a : "http://" + a;

                  case "urlstrict":
                    c = /^(https?|s?ftp|git):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i;
                    break;

                  case "dateIso":
                    c = /^(\d{4})\D?(0[1-9]|1[0-2])\D?([12]\d|0[1-9]|3[01])$/;
                    break;

                  case "phone":
                    c = /^((\+\d{1,3}(-| )?\(?\d\)?(-| )?\d{1,5})|(\(?\d{2,6}\)?))(-| )?(\d{3,4})(-| )?(\d{4})(( x| ext)\d{1,5}){0,1}$/;
                    break;

                  default:
                    return !1;
                }
                return "" !== a ? c.test(a) : !1;
            },
            regexp: function(a, b, c) {
                return RegExp(b, c.options.regexpFlag || "").test(a);
            },
            minlength: function(a, b) {
                return a.length >= b;
            },
            maxlength: function(a, b) {
                return a.length <= b;
            },
            rangelength: function(a, b) {
                return this.minlength(a, b[0]) && this.maxlength(a, b[1]);
            },
            min: function(a, b) {
                return Number(a) >= b;
            },
            max: function(a, b) {
                return Number(a) <= b;
            },
            range: function(a, b) {
                return a >= b[0] && a <= b[1];
            },
            equalto: function(b, c, d) {
                return d.options.validateIfUnchanged = !0, b === a(c).val();
            },
            remote: function(b, c, d) {
                var e = {}, f = {};
                e[d.$element.attr("name")] = b, "undefined" != typeof d.options.remoteDatatype && (f = {
                    dataType: d.options.remoteDatatype
                });
                var g = function(b, c) {
                    "undefined" != typeof c && "undefined" != typeof d.Validator.messages.remote && c !== d.Validator.messages.remote && a(d.ulError + " .remote").remove(), 
                    d.updtConstraint({
                        name: "remote",
                        valid: b
                    }, c), d.manageValidationResult();
                }, h = function(b) {
                    if ("object" == typeof b) return b;
                    try {
                        b = a.parseJSON(b);
                    } catch (c) {}
                    return b;
                }, i = function(a) {
                    return "object" == typeof a && null !== a ? "undefined" != typeof a.error ? a.error : "undefined" != typeof a.message ? a.message : null : null;
                };
                return a.ajax(a.extend({}, {
                    url: c,
                    data: e,
                    type: d.options.remoteMethod || "GET",
                    success: function(a) {
                        a = h(a), g(1 === a || !0 === a || "object" == typeof a && null !== a && "undefined" != typeof a.success, i(a));
                    },
                    error: function(a) {
                        a = h(a), g(!1, i(a));
                    }
                }, f)), null;
            },
            mincheck: function(a, b) {
                return this.minlength(a, b);
            },
            maxcheck: function(a, b) {
                return this.maxlength(a, b);
            },
            rangecheck: function(a, b) {
                return this.rangelength(a, b);
            }
        },
        init: function(a) {
            var b = a.validators;
            a = a.messages;
            for (var c in b) this.addValidator(c, b[c]);
            for (c in a) this.addMessage(c, a[c]);
        },
        formatMesssage: function(a, b) {
            if ("object" == typeof b) {
                for (var c in b) a = this.formatMesssage(a, b[c]);
                return a;
            }
            return "string" == typeof a ? a.replace(/%s/i, b) : "";
        },
        addValidator: function(a, b) {
            this.validators[a] = b;
        },
        addMessage: function(a, b, c) {
            if ("undefined" != typeof c && !0 === c) this.messages.type[a] = b; else if ("type" === a) for (var d in b) this.messages.type[d] = b[d]; else this.messages[a] = b;
        }
    };
    var c = function(a, c, d) {
        return this.options = c, this.Validator = new b(c), "ParsleyFieldMultiple" === d ? this : void this.init(a, d || "ParsleyField");
    };
    c.prototype = {
        constructor: c,
        init: function(b, c) {
            this.type = c, this.valid = !0, this.element = b, this.validatedOnce = !1, this.$element = a(b), 
            this.val = this.$element.val(), this.isRequired = !1, this.constraints = {}, "undefined" == typeof this.isRadioOrCheckbox && (this.isRadioOrCheckbox = !1, 
            this.hash = this.generateHash(), this.errorClassHandler = this.options.errors.classHandler(b, this.isRadioOrCheckbox) || this.$element), 
            this.ulErrorManagement(), this.bindHtml5Constraints(), this.addConstraints(), this.hasConstraints() && this.bindValidationEvents();
        },
        setParent: function(b) {
            this.$parent = a(b);
        },
        getParent: function() {
            return this.$parent;
        },
        bindHtml5Constraints: function() {
            (this.$element.hasClass("required") || this.$element.prop("required")) && (this.options.required = !0), 
            "undefined" != typeof this.$element.attr("type") && RegExp(this.$element.attr("type"), "i").test("email url number range") && (this.options.type = this.$element.attr("type"), 
            RegExp(this.options.type, "i").test("number range") && (this.options.type = "number", 
            "undefined" != typeof this.$element.attr("min") && this.$element.attr("min").length && (this.options.min = this.$element.attr("min")), 
            "undefined" != typeof this.$element.attr("max") && this.$element.attr("max").length && (this.options.max = this.$element.attr("max")))), 
            "string" == typeof this.$element.attr("pattern") && this.$element.attr("pattern").length && (this.options.regexp = this.$element.attr("pattern"));
        },
        addConstraints: function() {
            for (var a in this.options) {
                var b = {};
                b[a] = this.options[a], this.addConstraint(b, !0);
            }
        },
        addConstraint: function(a, b) {
            for (var c in a) c = c.toLowerCase(), "function" == typeof this.Validator.validators[c] && (this.constraints[c] = {
                name: c,
                requirements: a[c],
                valid: null
            }, "required" === c && (this.isRequired = !0), this.addCustomConstraintMessage(c));
            "undefined" == typeof b && this.bindValidationEvents();
        },
        updateConstraint: function(a, b) {
            for (var c in a) this.updtConstraint({
                name: c,
                requirements: a[c],
                valid: null
            }, b);
        },
        updtConstraint: function(b, c) {
            this.constraints[b.name] = a.extend(!0, this.constraints[b.name], b), "string" == typeof c && (this.Validator.messages[b.name] = c), 
            this.bindValidationEvents();
        },
        removeConstraint: function(a) {
            a = a.toLowerCase(), delete this.constraints[a], "required" === a && (this.isRequired = !1), 
            this.hasConstraints() ? this.bindValidationEvents() : "ParsleyForm" == typeof this.getParent() ? this.getParent().removeItem(this.$element) : this.destroy();
        },
        addCustomConstraintMessage: function(a) {
            var b = a + ("type" === a && "undefined" != typeof this.options[a] ? this.options[a].charAt(0).toUpperCase() + this.options[a].substr(1) : "") + "Message";
            "undefined" != typeof this.options[b] && this.Validator.addMessage("type" === a ? this.options[a] : a, this.options[b], "type" === a);
        },
        bindValidationEvents: function() {
            this.valid = null, this.$element.addClass("parsley-validated"), this.$element.off("." + this.type), 
            this.options.remote && !/change/i.test(this.options.trigger) && (this.options.trigger = this.options.trigger ? " change" : "change");
            var b = (this.options.trigger ? this.options.trigger : "") + (/key/i.test(this.options.trigger) ? "" : " keyup");
            this.$element.is("select") && (b += /change/i.test(b) ? "" : " change"), b = b.replace(/^\s+/g, "").replace(/\s+$/g, ""), 
            this.$element.on((b + " ").split(" ").join("." + this.type + " "), !1, a.proxy(this.eventValidation, this));
        },
        generateHash: function() {
            return "parsley-" + (Math.random() + "").substring(2);
        },
        getHash: function() {
            return this.hash;
        },
        getVal: function() {
            return this.$element.data("value") || this.$element.val();
        },
        eventValidation: function(a) {
            var b = this.getVal();
            return "keyup" === a.type && !/keyup/i.test(this.options.trigger) && !this.validatedOnce || "change" === a.type && !/change/i.test(this.options.trigger) && !this.validatedOnce || !this.isRadioOrCheckbox && this.getLength(b) < this.options.validationMinlength && !this.validatedOnce ? !0 : void this.validate();
        },
        getLength: function(a) {
            return a && a.hasOwnProperty("length") ? a.length : 0;
        },
        isValid: function() {
            return this.validate(!1);
        },
        hasConstraints: function() {
            for (var a in this.constraints) return !0;
            return !1;
        },
        validate: function(a) {
            var b = this.getVal(), c = null;
            return this.hasConstraints() ? this.options.listeners.onFieldValidate(this.element, this) || "" === b && !this.isRequired ? (this.reset(), 
            null) : this.needsValidation(b) ? (c = this.applyValidators(), ("undefined" != typeof a ? a : this.options.showErrors) && this.manageValidationResult(), 
            c) : this.valid : null;
        },
        needsValidation: function(a) {
            return !this.options.validateIfUnchanged && null !== this.valid && this.val === a && this.validatedOnce ? !1 : (this.val = a, 
            this.validatedOnce = !0);
        },
        applyValidators: function() {
            var a, b = null;
            for (a in this.constraints) {
                var c = this.Validator.validators[this.constraints[a].name](this.val, this.constraints[a].requirements, this);
                !1 === c ? (b = !1, this.constraints[a].valid = b, this.options.listeners.onFieldError(this.element, this.constraints, this)) : !0 === c && (this.constraints[a].valid = !0, 
                b = !1 !== b, this.options.listeners.onFieldSuccess(this.element, this.constraints, this));
            }
            return b;
        },
        manageValidationResult: function() {
            var b, c = null;
            for (b in this.constraints) !1 === this.constraints[b].valid ? (this.manageError(this.constraints[b]), 
            c = !1) : !0 === this.constraints[b].valid && (this.removeError(this.constraints[b].name), 
            c = !1 !== c);
            return this.valid = c, !0 === this.valid ? (this.removeErrors(), this.errorClassHandler.removeClass(this.options.errorClass).addClass(this.options.successClass), 
            !0) : !1 === this.valid ? (this.errorClassHandler.removeClass(this.options.successClass).addClass(this.options.errorClass), 
            !1) : (this.ulError && 0 === a(this.ulError).children().length && this.removeErrors(), 
            c);
        },
        ulErrorManagement: function() {
            this.ulError = "#" + this.hash, this.ulTemplate = a(this.options.errors.errorsWrapper).attr("id", this.hash).addClass("parsley-error-list");
        },
        removeError: function(b) {
            b = this.ulError + " ." + b;
            var c = this;
            this.options.animate ? a(b).fadeOut(this.options.animateDuration, function() {
                a(this).remove(), c.ulError && 0 === a(c.ulError).children().length && c.removeErrors();
            }) : a(b).remove();
        },
        addError: function(b) {
            for (var c in b) {
                var d = a(this.options.errors.errorElem).addClass(c);
                a(this.ulError).append(this.options.animate ? a(d).html(b[c]).hide().fadeIn(this.options.animateDuration) : a(d).html(b[c]));
            }
        },
        removeErrors: function() {
            this.options.animate ? a(this.ulError).fadeOut(this.options.animateDuration, function() {
                a(this).remove();
            }) : a(this.ulError).remove();
        },
        reset: function() {
            this.valid = null, this.removeErrors(), this.validatedOnce = !1, this.errorClassHandler.removeClass(this.options.successClass).removeClass(this.options.errorClass);
            for (var a in this.constraints) this.constraints[a].valid = null;
            return this;
        },
        manageError: function(b) {
            if (a(this.ulError).length || this.manageErrorContainer(), !("required" === b.name && null !== this.getVal() && 0 < this.getVal().length || this.isRequired && "required" !== b.name && (null === this.getVal() || 0 === this.getVal().length))) {
                var c = b.name, d = !1 !== this.options.errorMessage ? "custom-error-message" : c, e = {};
                b = !1 !== this.options.errorMessage ? this.options.errorMessage : "type" === b.name ? this.Validator.messages[c][b.requirements] : "undefined" == typeof this.Validator.messages[c] ? this.Validator.messages.defaultMessage : this.Validator.formatMesssage(this.Validator.messages[c], b.requirements), 
                a(this.ulError + " ." + d).length || (e[d] = b, this.addError(e));
            }
        },
        manageErrorContainer: function() {
            var b = this.options.errorContainer || this.options.errors.container(this.element, this.isRadioOrCheckbox), c = this.options.animate ? this.ulTemplate.show() : this.ulTemplate;
            "undefined" != typeof b ? a(b).append(c) : this.isRadioOrCheckbox ? this.$element.parent().after(c) : this.$element.after(c);
        },
        addListener: function(a) {
            for (var b in a) this.options.listeners[b] = a[b];
        },
        destroy: function() {
            this.$element.removeClass("parsley-validated"), this.reset().$element.off("." + this.type).removeData(this.type);
        }
    };
    var d = function(a, c, d) {
        this.initMultiple(a, c), this.inherit(a, c), this.Validator = new b(c), this.init(a, d || "ParsleyFieldMultiple");
    };
    d.prototype = {
        constructor: d,
        initMultiple: function(b, c) {
            this.element = b, this.$element = a(b), this.group = c.group || !1, this.hash = this.getName(), 
            this.siblings = this.group ? '[data-group="' + this.group + '"]' : 'input[name="' + this.$element.attr("name") + '"]', 
            this.isRadioOrCheckbox = !0, this.isRadio = this.$element.is("input[type=radio]"), 
            this.isCheckbox = this.$element.is("input[type=checkbox]"), this.errorClassHandler = c.errors.classHandler(b, this.isRadioOrCheckbox) || this.$element.parent();
        },
        inherit: function(a, b) {
            var d, e = new c(a, b, "ParsleyFieldMultiple");
            for (d in e) "undefined" == typeof this[d] && (this[d] = e[d]);
        },
        getName: function() {
            if (this.group) return "parsley-" + this.group;
            if ("undefined" == typeof this.$element.attr("name")) throw "A radio / checkbox input must have a data-group attribute or a name to be Parsley validated !";
            return "parsley-" + this.$element.attr("name").replace(/(:|\.|\[|\])/g, "");
        },
        getVal: function() {
            if (this.isRadio) return a(this.siblings + ":checked").val() || "";
            if (this.isCheckbox) {
                var b = [];
                return a(this.siblings + ":checked").each(function() {
                    b.push(a(this).val());
                }), b;
            }
        },
        bindValidationEvents: function() {
            this.valid = null, this.$element.addClass("parsley-validated"), this.$element.off("." + this.type);
            var b = this, c = (this.options.trigger ? this.options.trigger : "") + (/change/i.test(this.options.trigger) ? "" : " change"), c = c.replace(/^\s+/g, "").replace(/\s+$/g, "");
            a(this.siblings).each(function() {
                a(this).on(c.split(" ").join("." + b.type + " "), !1, a.proxy(b.eventValidation, b));
            });
        }
    };
    var e = function(a, b, c) {
        this.init(a, b, c || "parsleyForm");
    };
    e.prototype = {
        constructor: e,
        init: function(b, c, d) {
            this.type = d, this.items = [], this.$element = a(b), this.options = c;
            var e = this;
            this.$element.find(c.inputs).each(function() {
                e.addItem(this);
            }), this.$element.on("submit." + this.type, !1, a.proxy(this.validate, this));
        },
        addListener: function(a) {
            for (var b in a) if (/Field/.test(b)) for (var c = 0; c < this.items.length; c++) this.items[c].addListener(a); else this.options.listeners[b] = a[b];
        },
        addItem: function(b) {
            return a(b).is(this.options.excluded) ? !1 : (b = a(b).parsley(this.options), b.setParent(this), 
            void this.items.push(b));
        },
        removeItem: function(b) {
            b = a(b).parsley();
            for (var c = 0; c < this.items.length; c++) if (this.items[c].hash === b.hash) return this.items[c].destroy(), 
            this.items.splice(c, 1), !0;
            return !1;
        },
        validate: function(a) {
            var b = !0;
            this.focusedField = !1;
            for (var c = 0; c < this.items.length; c++) "undefined" != typeof this.items[c] && !1 === this.items[c].validate() && (b = !1, 
            !this.focusedField && "first" === this.options.focus || "last" === this.options.focus) && (this.focusedField = this.items[c].$element);
            return this.focusedField && !b && this.focusedField.focus(), this.options.listeners.onFormSubmit(b, a, this), 
            b;
        },
        isValid: function() {
            for (var a = 0; a < this.items.length; a++) if (!1 === this.items[a].isValid()) return !1;
            return !0;
        },
        removeErrors: function() {
            for (var a = 0; a < this.items.length; a++) this.items[a].parsley("reset");
        },
        destroy: function() {
            for (var a = 0; a < this.items.length; a++) this.items[a].destroy();
            this.$element.off("." + this.type).removeData(this.type);
        },
        reset: function() {
            for (var a = 0; a < this.items.length; a++) this.items[a].reset();
        }
    }, a.fn.parsley = function(b, f) {
        function g(g, i) {
            var j = a(g).data(i);
            if (!j) {
                switch (i) {
                  case "parsleyForm":
                    j = new e(g, h, "parsleyForm");
                    break;

                  case "parsleyField":
                    j = new c(g, h, "parsleyField");
                    break;

                  case "parsleyFieldMultiple":
                    j = new d(g, h, "parsleyFieldMultiple");
                    break;

                  default:
                    return;
                }
                a(g).data(i, j);
            }
            return "string" == typeof b && "function" == typeof j[b] ? (j = j[b](f), "undefined" != typeof j ? j : a(g)) : j;
        }
        var h = a.extend(!0, {}, a.fn.parsley.defaults, "undefined" != typeof window.ParsleyConfig ? window.ParsleyConfig : {}, b, this.data()), i = null;
        return a(this).is("form") || !0 === a(this).data("bind") ? i = g(a(this), "parsleyForm") : a(this).is(h.inputs) && !a(this).is(h.excluded) && (i = g(a(this), a(this).is("input[type=radio], input[type=checkbox]") ? "parsleyFieldMultiple" : "parsleyField")), 
        "function" == typeof f ? f() : i;
    }, a.fn.parsley.Constructor = e, a.fn.parsley.defaults = {
        inputs: "input, textarea, select",
        excluded: "input[type=hidden], input[type=file], :disabled",
        trigger: !1,
        animate: !0,
        animateDuration: 300,
        focus: "first",
        validationMinlength: 3,
        successClass: "parsley-success",
        errorClass: "parsley-error",
        errorMessage: !1,
        validators: {},
        showErrors: !0,
        messages: {},
        validateIfUnchanged: !1,
        errors: {
            classHandler: function() {},
            container: function() {},
            errorsWrapper: "<ul></ul>",
            errorElem: "<li></li>"
        },
        listeners: {
            onFieldValidate: function() {
                return !1;
            },
            onFormSubmit: function() {},
            onFieldError: function() {},
            onFieldSuccess: function() {}
        }
    }, a(window).on("load", function() {
        a('[data-validate="parsley"]').each(function() {
            a(this).parsley();
        });
    });
}(window.jQuery || window.Zepto), function($) {
    function sc_setScroll(a, b, c) {
        return "transition" == c.transition && "swing" == b && (b = "ease"), {
            anims: [],
            duration: a,
            orgDuration: a,
            easing: b,
            startTime: getTime()
        };
    }
    function sc_startScroll(a, b) {
        for (var c = 0, d = a.anims.length; d > c; c++) {
            var e = a.anims[c];
            e && e[0][b.transition](e[1], a.duration, a.easing, e[2]);
        }
    }
    function sc_stopScroll(a, b) {
        is_boolean(b) || (b = !0), is_object(a.pre) && sc_stopScroll(a.pre, b);
        for (var c = 0, d = a.anims.length; d > c; c++) {
            var e = a.anims[c];
            e[0].stop(!0), b && (e[0].css(e[1]), is_function(e[2]) && e[2]());
        }
        is_object(a.post) && sc_stopScroll(a.post, b);
    }
    function sc_afterScroll(a, b, c) {
        switch (b && b.remove(), c.fx) {
          case "fade":
          case "crossfade":
          case "cover-fade":
          case "uncover-fade":
            a.css("opacity", 1), a.css("filter", "");
        }
    }
    function sc_fireCallbacks(a, b, c, d, e) {
        if (b[c] && b[c].call(a, d), e[c].length) for (var f = 0, g = e[c].length; g > f; f++) e[c][f].call(a, d);
        return [];
    }
    function sc_fireQueue(a, b, c) {
        return b.length && (a.trigger(cf_e(b[0][0], c), b[0][1]), b.shift()), b;
    }
    function sc_hideHiddenItems(a) {
        a.each(function() {
            var a = $(this);
            a.data("_cfs_isHidden", a.is(":hidden")).hide();
        });
    }
    function sc_showHiddenItems(a) {
        a && a.each(function() {
            var a = $(this);
            a.data("_cfs_isHidden") || a.show();
        });
    }
    function sc_clearTimers(a) {
        return a.auto && clearTimeout(a.auto), a.progress && clearInterval(a.progress), 
        a;
    }
    function sc_mapCallbackArguments(a, b, c, d, e, f, g) {
        return {
            width: g.width,
            height: g.height,
            items: {
                old: a,
                skipped: b,
                visible: c
            },
            scroll: {
                items: d,
                direction: e,
                duration: f
            }
        };
    }
    function sc_getDuration(a, b, c, d) {
        var e = a.duration;
        return "none" == a.fx ? 0 : ("auto" == e ? e = b.scroll.duration / b.scroll.items * c : 10 > e && (e = d / e), 
        1 > e ? 0 : ("fade" == a.fx && (e /= 2), Math.round(e)));
    }
    function nv_showNavi(a, b, c) {
        var d = is_number(a.items.minimum) ? a.items.minimum : a.items.visible + 1;
        if ("show" == b || "hide" == b) var e = b; else if (d > b) {
            debug(c, "Not enough items (" + b + " total, " + d + " needed): Hiding navigation.");
            var e = "hide";
        } else var e = "show";
        var f = "show" == e ? "removeClass" : "addClass", g = cf_c("hidden", c);
        a.auto.button && a.auto.button[e]()[f](g), a.prev.button && a.prev.button[e]()[f](g), 
        a.next.button && a.next.button[e]()[f](g), a.pagination.container && a.pagination.container[e]()[f](g);
    }
    function nv_enableNavi(a, b, c) {
        if (!a.circular && !a.infinite) {
            var d = "removeClass" == b || "addClass" == b ? b : !1, e = cf_c("disabled", c);
            if (a.auto.button && d && a.auto.button[d](e), a.prev.button) {
                var f = d || 0 == b ? "addClass" : "removeClass";
                a.prev.button[f](e);
            }
            if (a.next.button) {
                var f = d || b == a.items.visible ? "addClass" : "removeClass";
                a.next.button[f](e);
            }
        }
    }
    function go_getObject(a, b) {
        return is_function(b) ? b = b.call(a) : is_undefined(b) && (b = {}), b;
    }
    function go_getItemsObject(a, b) {
        return b = go_getObject(a, b), is_number(b) ? b = {
            visible: b
        } : "variable" == b ? b = {
            visible: b,
            width: b,
            height: b
        } : is_object(b) || (b = {}), b;
    }
    function go_getScrollObject(a, b) {
        return b = go_getObject(a, b), is_number(b) ? b = 50 >= b ? {
            items: b
        } : {
            duration: b
        } : is_string(b) ? b = {
            easing: b
        } : is_object(b) || (b = {}), b;
    }
    function go_getNaviObject(a, b) {
        if (b = go_getObject(a, b), is_string(b)) {
            var c = cf_getKeyCode(b);
            b = -1 == c ? $(b) : c;
        }
        return b;
    }
    function go_getAutoObject(a, b) {
        return b = go_getNaviObject(a, b), is_jquery(b) ? b = {
            button: b
        } : is_boolean(b) ? b = {
            play: b
        } : is_number(b) && (b = {
            timeoutDuration: b
        }), b.progress && (is_string(b.progress) || is_jquery(b.progress)) && (b.progress = {
            bar: b.progress
        }), b;
    }
    function go_complementAutoObject(a, b) {
        return is_function(b.button) && (b.button = b.button.call(a)), is_string(b.button) && (b.button = $(b.button)), 
        is_boolean(b.play) || (b.play = !0), is_number(b.delay) || (b.delay = 0), is_undefined(b.pauseOnEvent) && (b.pauseOnEvent = !0), 
        is_boolean(b.pauseOnResize) || (b.pauseOnResize = !0), is_number(b.timeoutDuration) || (b.timeoutDuration = 10 > b.duration ? 2500 : 5 * b.duration), 
        b.progress && (is_function(b.progress.bar) && (b.progress.bar = b.progress.bar.call(a)), 
        is_string(b.progress.bar) && (b.progress.bar = $(b.progress.bar)), b.progress.bar ? (is_function(b.progress.updater) || (b.progress.updater = $.fn.carouFredSel.progressbarUpdater), 
        is_number(b.progress.interval) || (b.progress.interval = 50)) : b.progress = !1), 
        b;
    }
    function go_getPrevNextObject(a, b) {
        return b = go_getNaviObject(a, b), is_jquery(b) ? b = {
            button: b
        } : is_number(b) && (b = {
            key: b
        }), b;
    }
    function go_complementPrevNextObject(a, b) {
        return is_function(b.button) && (b.button = b.button.call(a)), is_string(b.button) && (b.button = $(b.button)), 
        is_string(b.key) && (b.key = cf_getKeyCode(b.key)), b;
    }
    function go_getPaginationObject(a, b) {
        return b = go_getNaviObject(a, b), is_jquery(b) ? b = {
            container: b
        } : is_boolean(b) && (b = {
            keys: b
        }), b;
    }
    function go_complementPaginationObject(a, b) {
        return is_function(b.container) && (b.container = b.container.call(a)), is_string(b.container) && (b.container = $(b.container)), 
        is_number(b.items) || (b.items = !1), is_boolean(b.keys) || (b.keys = !1), is_function(b.anchorBuilder) || is_false(b.anchorBuilder) || (b.anchorBuilder = $.fn.carouFredSel.pageAnchorBuilder), 
        is_number(b.deviation) || (b.deviation = 0), b;
    }
    function go_getSwipeObject(a, b) {
        return is_function(b) && (b = b.call(a)), is_undefined(b) && (b = {
            onTouch: !1
        }), is_true(b) ? b = {
            onTouch: b
        } : is_number(b) && (b = {
            items: b
        }), b;
    }
    function go_complementSwipeObject(a, b) {
        return is_boolean(b.onTouch) || (b.onTouch = !0), is_boolean(b.onMouse) || (b.onMouse = !1), 
        is_object(b.options) || (b.options = {}), is_boolean(b.options.triggerOnTouchEnd) || (b.options.triggerOnTouchEnd = !1), 
        b;
    }
    function go_getMousewheelObject(a, b) {
        return is_function(b) && (b = b.call(a)), is_true(b) ? b = {} : is_number(b) ? b = {
            items: b
        } : is_undefined(b) && (b = !1), b;
    }
    function go_complementMousewheelObject(a, b) {
        return b;
    }
    function gn_getItemIndex(a, b, c, d, e) {
        if (is_string(a) && (a = $(a, e)), is_object(a) && (a = $(a, e)), is_jquery(a) ? (a = e.children().index(a), 
        is_boolean(c) || (c = !1)) : is_boolean(c) || (c = !0), is_number(a) || (a = 0), 
        is_number(b) || (b = 0), c && (a += d.first), a += b, d.total > 0) {
            for (;a >= d.total; ) a -= d.total;
            for (;0 > a; ) a += d.total;
        }
        return a;
    }
    function gn_getVisibleItemsPrev(a, b, c) {
        for (var d = 0, e = 0, f = c; f >= 0; f--) {
            var g = a.eq(f);
            if (d += g.is(":visible") ? g[b.d.outerWidth](!0) : 0, d > b.maxDimension) return e;
            0 == f && (f = a.length), e++;
        }
    }
    function gn_getVisibleItemsPrevFilter(a, b, c) {
        return gn_getItemsPrevFilter(a, b.items.filter, b.items.visibleConf.org, c);
    }
    function gn_getScrollItemsPrevFilter(a, b, c, d) {
        return gn_getItemsPrevFilter(a, b.items.filter, d, c);
    }
    function gn_getItemsPrevFilter(a, b, c, d) {
        for (var e = 0, f = 0, g = d, h = a.length; g >= 0; g--) {
            if (f++, f == h) return f;
            var i = a.eq(g);
            if (i.is(b) && (e++, e == c)) return f;
            0 == g && (g = h);
        }
    }
    function gn_getVisibleOrg(a, b) {
        return b.items.visibleConf.org || a.children().slice(0, b.items.visible).filter(b.items.filter).length;
    }
    function gn_getVisibleItemsNext(a, b, c) {
        for (var d = 0, e = 0, f = c, g = a.length - 1; g >= f; f++) {
            var h = a.eq(f);
            if (d += h.is(":visible") ? h[b.d.outerWidth](!0) : 0, d > b.maxDimension) return e;
            if (e++, e == g + 1) return e;
            f == g && (f = -1);
        }
    }
    function gn_getVisibleItemsNextTestCircular(a, b, c, d) {
        var e = gn_getVisibleItemsNext(a, b, c);
        return b.circular || c + e > d && (e = d - c), e;
    }
    function gn_getVisibleItemsNextFilter(a, b, c) {
        return gn_getItemsNextFilter(a, b.items.filter, b.items.visibleConf.org, c, b.circular);
    }
    function gn_getScrollItemsNextFilter(a, b, c, d) {
        return gn_getItemsNextFilter(a, b.items.filter, d + 1, c, b.circular) - 1;
    }
    function gn_getItemsNextFilter(a, b, c, d) {
        for (var e = 0, f = 0, g = d, h = a.length - 1; h >= g; g++) {
            if (f++, f >= h) return f;
            var i = a.eq(g);
            if (i.is(b) && (e++, e == c)) return f;
            g == h && (g = -1);
        }
    }
    function gi_getCurrentItems(a, b) {
        return a.slice(0, b.items.visible);
    }
    function gi_getOldItemsPrev(a, b, c) {
        return a.slice(c, b.items.visibleConf.old + c);
    }
    function gi_getNewItemsPrev(a, b) {
        return a.slice(0, b.items.visible);
    }
    function gi_getOldItemsNext(a, b) {
        return a.slice(0, b.items.visibleConf.old);
    }
    function gi_getNewItemsNext(a, b, c) {
        return a.slice(c, b.items.visible + c);
    }
    function sz_storeMargin(a, b, c) {
        b.usePadding && (is_string(c) || (c = "_cfs_origCssMargin"), a.each(function() {
            var a = $(this), d = parseInt(a.css(b.d.marginRight), 10);
            is_number(d) || (d = 0), a.data(c, d);
        }));
    }
    function sz_resetMargin(a, b, c) {
        if (b.usePadding) {
            var d = is_boolean(c) ? c : !1;
            is_number(c) || (c = 0), sz_storeMargin(a, b, "_cfs_tempCssMargin"), a.each(function() {
                var a = $(this);
                a.css(b.d.marginRight, d ? a.data("_cfs_tempCssMargin") : c + a.data("_cfs_origCssMargin"));
            });
        }
    }
    function sz_storeOrigCss(a) {
        a.each(function() {
            var a = $(this);
            a.data("_cfs_origCss", a.attr("style") || "");
        });
    }
    function sz_restoreOrigCss(a) {
        a.each(function() {
            var a = $(this);
            a.attr("style", a.data("_cfs_origCss") || "");
        });
    }
    function sz_setResponsiveSizes(a, b) {
        var c = (a.items.visible, a.items[a.d.width]), d = a[a.d.height], e = is_percentage(d);
        b.each(function() {
            var b = $(this), f = c - ms_getPaddingBorderMargin(b, a, "Width");
            b[a.d.width](f), e && b[a.d.height](ms_getPercentage(f, d));
        });
    }
    function sz_setSizes(a, b) {
        var c = a.parent(), d = a.children(), e = gi_getCurrentItems(d, b), f = cf_mapWrapperSizes(ms_getSizes(e, b, !0), b, !1);
        if (c.css(f), b.usePadding) {
            var g = b.padding, h = g[b.d[1]];
            b.align && 0 > h && (h = 0);
            var i = e.last();
            i.css(b.d.marginRight, i.data("_cfs_origCssMargin") + h), a.css(b.d.top, g[b.d[0]]), 
            a.css(b.d.left, g[b.d[3]]);
        }
        return a.css(b.d.width, f[b.d.width] + 2 * ms_getTotalSize(d, b, "width")), a.css(b.d.height, ms_getLargestSize(d, b, "height")), 
        f;
    }
    function ms_getSizes(a, b, c) {
        return [ ms_getTotalSize(a, b, "width", c), ms_getLargestSize(a, b, "height", c) ];
    }
    function ms_getLargestSize(a, b, c, d) {
        return is_boolean(d) || (d = !1), is_number(b[b.d[c]]) && d ? b[b.d[c]] : is_number(b.items[b.d[c]]) ? b.items[b.d[c]] : (c = c.toLowerCase().indexOf("width") > -1 ? "outerWidth" : "outerHeight", 
        ms_getTrueLargestSize(a, b, c));
    }
    function ms_getTrueLargestSize(a, b, c) {
        for (var d = 0, e = 0, f = a.length; f > e; e++) {
            var g = a.eq(e), h = g.is(":visible") ? g[b.d[c]](!0) : 0;
            h > d && (d = h);
        }
        return d;
    }
    function ms_getTotalSize(a, b, c, d) {
        if (is_boolean(d) || (d = !1), is_number(b[b.d[c]]) && d) return b[b.d[c]];
        if (is_number(b.items[b.d[c]])) return b.items[b.d[c]] * a.length;
        for (var e = c.toLowerCase().indexOf("width") > -1 ? "outerWidth" : "outerHeight", f = 0, g = 0, h = a.length; h > g; g++) {
            var i = a.eq(g);
            f += i.is(":visible") ? i[b.d[e]](!0) : 0;
        }
        return f;
    }
    function ms_getParentSize(a, b, c) {
        var d = a.is(":visible");
        d && a.hide();
        var e = a.parent()[b.d[c]]();
        return d && a.show(), e;
    }
    function ms_getMaxDimension(a, b) {
        return is_number(a[a.d.width]) ? a[a.d.width] : b;
    }
    function ms_hasVariableSizes(a, b, c) {
        for (var d = !1, e = !1, f = 0, g = a.length; g > f; f++) {
            var h = a.eq(f), i = h.is(":visible") ? h[b.d[c]](!0) : 0;
            d === !1 ? d = i : d != i && (e = !0), 0 == d && (e = !0);
        }
        return e;
    }
    function ms_getPaddingBorderMargin(a, b, c) {
        return a[b.d["outer" + c]](!0) - a[b.d[c.toLowerCase()]]();
    }
    function ms_getPercentage(a, b) {
        if (is_percentage(b)) {
            if (b = parseInt(b.slice(0, -1), 10), !is_number(b)) return a;
            a *= b / 100;
        }
        return a;
    }
    function cf_e(a, b, c, d, e) {
        return is_boolean(c) || (c = !0), is_boolean(d) || (d = !0), is_boolean(e) || (e = !1), 
        c && (a = b.events.prefix + a), d && (a = a + "." + b.events.namespace), d && e && (a += b.serialNumber), 
        a;
    }
    function cf_c(a, b) {
        return is_string(b.classnames[a]) ? b.classnames[a] : a;
    }
    function cf_mapWrapperSizes(a, b, c) {
        is_boolean(c) || (c = !0);
        var d = b.usePadding && c ? b.padding : [ 0, 0, 0, 0 ], e = {};
        return e[b.d.width] = a[0] + d[1] + d[3], e[b.d.height] = a[1] + d[0] + d[2], e;
    }
    function cf_sortParams(a, b) {
        for (var c = [], d = 0, e = a.length; e > d; d++) for (var f = 0, g = b.length; g > f; f++) if (b[f].indexOf(typeof a[d]) > -1 && is_undefined(c[f])) {
            c[f] = a[d];
            break;
        }
        return c;
    }
    function cf_getPadding(a) {
        if (is_undefined(a)) return [ 0, 0, 0, 0 ];
        if (is_number(a)) return [ a, a, a, a ];
        if (is_string(a) && (a = a.split("px").join("").split("em").join("").split(" ")), 
        !is_array(a)) return [ 0, 0, 0, 0 ];
        for (var b = 0; 4 > b; b++) a[b] = parseInt(a[b], 10);
        switch (a.length) {
          case 0:
            return [ 0, 0, 0, 0 ];

          case 1:
            return [ a[0], a[0], a[0], a[0] ];

          case 2:
            return [ a[0], a[1], a[0], a[1] ];

          case 3:
            return [ a[0], a[1], a[2], a[1] ];

          default:
            return [ a[0], a[1], a[2], a[3] ];
        }
    }
    function cf_getAlignPadding(a, b) {
        var c = is_number(b[b.d.width]) ? Math.ceil(b[b.d.width] - ms_getTotalSize(a, b, "width")) : 0;
        switch (b.align) {
          case "left":
            return [ 0, c ];

          case "right":
            return [ c, 0 ];

          case "center":
          default:
            return [ Math.ceil(c / 2), Math.floor(c / 2) ];
        }
    }
    function cf_getDimensions(a) {
        for (var b = [ [ "width", "innerWidth", "outerWidth", "height", "innerHeight", "outerHeight", "left", "top", "marginRight", 0, 1, 2, 3 ], [ "height", "innerHeight", "outerHeight", "width", "innerWidth", "outerWidth", "top", "left", "marginBottom", 3, 2, 1, 0 ] ], c = b[0].length, d = "right" == a.direction || "left" == a.direction ? 0 : 1, e = {}, f = 0; c > f; f++) e[b[0][f]] = b[d][f];
        return e;
    }
    function cf_getAdjust(a, b, c, d) {
        var e = a;
        if (is_function(c)) e = c.call(d, e); else if (is_string(c)) {
            var f = c.split("+"), g = c.split("-");
            if (g.length > f.length) var h = !0, i = g[0], j = g[1]; else var h = !1, i = f[0], j = f[1];
            switch (i) {
              case "even":
                e = 1 == a % 2 ? a - 1 : a;
                break;

              case "odd":
                e = 0 == a % 2 ? a - 1 : a;
                break;

              default:
                e = a;
            }
            j = parseInt(j, 10), is_number(j) && (h && (j = -j), e += j);
        }
        return (!is_number(e) || 1 > e) && (e = 1), e;
    }
    function cf_getItemsAdjust(a, b, c, d) {
        return cf_getItemAdjustMinMax(cf_getAdjust(a, b, c, d), b.items.visibleConf);
    }
    function cf_getItemAdjustMinMax(a, b) {
        return is_number(b.min) && b.min > a && (a = b.min), is_number(b.max) && a > b.max && (a = b.max), 
        1 > a && (a = 1), a;
    }
    function cf_getSynchArr(a) {
        is_array(a) || (a = [ [ a ] ]), is_array(a[0]) || (a = [ a ]);
        for (var b = 0, c = a.length; c > b; b++) is_string(a[b][0]) && (a[b][0] = $(a[b][0])), 
        is_boolean(a[b][1]) || (a[b][1] = !0), is_boolean(a[b][2]) || (a[b][2] = !0), is_number(a[b][3]) || (a[b][3] = 0);
        return a;
    }
    function cf_getKeyCode(a) {
        return "right" == a ? 39 : "left" == a ? 37 : "up" == a ? 38 : "down" == a ? 40 : -1;
    }
    function cf_setCookie(a, b, c) {
        if (a) {
            var d = b.triggerHandler(cf_e("currentPosition", c));
            $.fn.carouFredSel.cookie.set(a, d);
        }
    }
    function cf_getCookie(a) {
        var b = $.fn.carouFredSel.cookie.get(a);
        return "" == b ? 0 : b;
    }
    function in_mapCss(a, b) {
        for (var c = {}, d = 0, e = b.length; e > d; d++) c[b[d]] = a.css(b[d]);
        return c;
    }
    function in_complementItems(a, b, c, d) {
        return is_object(a.visibleConf) || (a.visibleConf = {}), is_object(a.sizesConf) || (a.sizesConf = {}), 
        0 == a.start && is_number(d) && (a.start = d), is_object(a.visible) ? (a.visibleConf.min = a.visible.min, 
        a.visibleConf.max = a.visible.max, a.visible = !1) : is_string(a.visible) ? ("variable" == a.visible ? a.visibleConf.variable = !0 : a.visibleConf.adjust = a.visible, 
        a.visible = !1) : is_function(a.visible) && (a.visibleConf.adjust = a.visible, a.visible = !1), 
        is_string(a.filter) || (a.filter = c.filter(":hidden").length > 0 ? ":visible" : "*"), 
        a[b.d.width] || (b.responsive ? (debug(!0, "Set a " + b.d.width + " for the items!"), 
        a[b.d.width] = ms_getTrueLargestSize(c, b, "outerWidth")) : a[b.d.width] = ms_hasVariableSizes(c, b, "outerWidth") ? "variable" : c[b.d.outerWidth](!0)), 
        a[b.d.height] || (a[b.d.height] = ms_hasVariableSizes(c, b, "outerHeight") ? "variable" : c[b.d.outerHeight](!0)), 
        a.sizesConf.width = a.width, a.sizesConf.height = a.height, a;
    }
    function in_complementVisibleItems(a, b) {
        return "variable" == a.items[a.d.width] && (a.items.visibleConf.variable = !0), 
        a.items.visibleConf.variable || (is_number(a[a.d.width]) ? a.items.visible = Math.floor(a[a.d.width] / a.items[a.d.width]) : (a.items.visible = Math.floor(b / a.items[a.d.width]), 
        a[a.d.width] = a.items.visible * a.items[a.d.width], a.items.visibleConf.adjust || (a.align = !1)), 
        ("Infinity" == a.items.visible || 1 > a.items.visible) && (debug(!0, 'Not a valid number of visible items: Set to "variable".'), 
        a.items.visibleConf.variable = !0)), a;
    }
    function in_complementPrimarySize(a, b, c) {
        return "auto" == a && (a = ms_getTrueLargestSize(c, b, "outerWidth")), a;
    }
    function in_complementSecondarySize(a, b, c) {
        return "auto" == a && (a = ms_getTrueLargestSize(c, b, "outerHeight")), a || (a = b.items[b.d.height]), 
        a;
    }
    function in_getAlignPadding(a, b) {
        var c = cf_getAlignPadding(gi_getCurrentItems(b, a), a);
        return a.padding[a.d[1]] = c[1], a.padding[a.d[3]] = c[0], a;
    }
    function in_getResponsiveValues(a, b) {
        var c = cf_getItemAdjustMinMax(Math.ceil(a[a.d.width] / a.items[a.d.width]), a.items.visibleConf);
        c > b.length && (c = b.length);
        var d = Math.floor(a[a.d.width] / c);
        return a.items.visible = c, a.items[a.d.width] = d, a[a.d.width] = c * d, a;
    }
    function bt_pauseOnHoverConfig(a) {
        if (is_string(a)) var b = a.indexOf("immediate") > -1 ? !0 : !1, c = a.indexOf("resume") > -1 ? !0 : !1; else var b = c = !1;
        return [ b, c ];
    }
    function bt_mousesheelNumber(a) {
        return is_number(a) ? a : null;
    }
    function is_null(a) {
        return null === a;
    }
    function is_undefined(a) {
        return is_null(a) || void 0 === a || "" === a || "undefined" === a;
    }
    function is_array(a) {
        return a instanceof Array;
    }
    function is_jquery(a) {
        return a instanceof jQuery;
    }
    function is_object(a) {
        return (a instanceof Object || "object" == typeof a) && !is_null(a) && !is_jquery(a) && !is_array(a) && !is_function(a);
    }
    function is_number(a) {
        return (a instanceof Number || "number" == typeof a) && !isNaN(a);
    }
    function is_string(a) {
        return (a instanceof String || "string" == typeof a) && !is_undefined(a) && !is_true(a) && !is_false(a);
    }
    function is_function(a) {
        return a instanceof Function || "function" == typeof a;
    }
    function is_boolean(a) {
        return a instanceof Boolean || "boolean" == typeof a || is_true(a) || is_false(a);
    }
    function is_true(a) {
        return a === !0 || "true" === a;
    }
    function is_false(a) {
        return a === !1 || "false" === a;
    }
    function is_percentage(a) {
        return is_string(a) && "%" == a.slice(-1);
    }
    function getTime() {
        return new Date().getTime();
    }
    function deprecated(a, b) {
        debug(!0, a + " is DEPRECATED, support for it will be removed. Use " + b + " instead.");
    }
    function debug(a, b) {
        if (!is_undefined(window.console) && !is_undefined(window.console.log)) {
            if (is_object(a)) {
                var c = " (" + a.selector + ")";
                a = a.debug;
            } else var c = "";
            if (!a) return !1;
            b = is_string(b) ? "carouFredSel" + c + ": " + b : [ "carouFredSel" + c + ":", b ], 
            window.console.log(b);
        }
        return !1;
    }
    $.fn.carouFredSel || ($.fn.caroufredsel = $.fn.carouFredSel = function(options, configs) {
        if (0 == this.length) return debug(!0, 'No element found for "' + this.selector + '".'), 
        this;
        if (this.length > 1) return this.each(function() {
            $(this).carouFredSel(options, configs);
        });
        var $cfs = this, $tt0 = this[0], starting_position = !1;
        $cfs.data("_cfs_isCarousel") && (starting_position = $cfs.triggerHandler("_cfs_triggerEvent", "currentPosition"), 
        $cfs.trigger("_cfs_triggerEvent", [ "destroy", !0 ]));
        var FN = {};
        FN._init = function(a, b, c) {
            a = go_getObject($tt0, a), a.items = go_getItemsObject($tt0, a.items), a.scroll = go_getScrollObject($tt0, a.scroll), 
            a.auto = go_getAutoObject($tt0, a.auto), a.prev = go_getPrevNextObject($tt0, a.prev), 
            a.next = go_getPrevNextObject($tt0, a.next), a.pagination = go_getPaginationObject($tt0, a.pagination), 
            a.swipe = go_getSwipeObject($tt0, a.swipe), a.mousewheel = go_getMousewheelObject($tt0, a.mousewheel), 
            b && (opts_orig = $.extend(!0, {}, $.fn.carouFredSel.defaults, a)), opts = $.extend(!0, {}, $.fn.carouFredSel.defaults, a), 
            opts.d = cf_getDimensions(opts), crsl.direction = "up" == opts.direction || "left" == opts.direction ? "next" : "prev";
            var d = $cfs.children(), e = ms_getParentSize($wrp, opts, "width");
            if (is_true(opts.cookie) && (opts.cookie = "caroufredsel_cookie_" + conf.serialNumber), 
            opts.maxDimension = ms_getMaxDimension(opts, e), opts.items = in_complementItems(opts.items, opts, d, c), 
            opts[opts.d.width] = in_complementPrimarySize(opts[opts.d.width], opts, d), opts[opts.d.height] = in_complementSecondarySize(opts[opts.d.height], opts, d), 
            opts.responsive && (is_percentage(opts[opts.d.width]) || (opts[opts.d.width] = "100%")), 
            is_percentage(opts[opts.d.width]) && (crsl.upDateOnWindowResize = !0, crsl.primarySizePercentage = opts[opts.d.width], 
            opts[opts.d.width] = ms_getPercentage(e, crsl.primarySizePercentage), opts.items.visible || (opts.items.visibleConf.variable = !0)), 
            opts.responsive ? (opts.usePadding = !1, opts.padding = [ 0, 0, 0, 0 ], opts.align = !1, 
            opts.items.visibleConf.variable = !1) : (opts.items.visible || (opts = in_complementVisibleItems(opts, e)), 
            opts[opts.d.width] || (!opts.items.visibleConf.variable && is_number(opts.items[opts.d.width]) && "*" == opts.items.filter ? (opts[opts.d.width] = opts.items.visible * opts.items[opts.d.width], 
            opts.align = !1) : opts[opts.d.width] = "variable"), is_undefined(opts.align) && (opts.align = is_number(opts[opts.d.width]) ? "center" : !1), 
            opts.items.visibleConf.variable && (opts.items.visible = gn_getVisibleItemsNext(d, opts, 0))), 
            "*" == opts.items.filter || opts.items.visibleConf.variable || (opts.items.visibleConf.org = opts.items.visible, 
            opts.items.visible = gn_getVisibleItemsNextFilter(d, opts, 0)), opts.items.visible = cf_getItemsAdjust(opts.items.visible, opts, opts.items.visibleConf.adjust, $tt0), 
            opts.items.visibleConf.old = opts.items.visible, opts.responsive) opts.items.visibleConf.min || (opts.items.visibleConf.min = opts.items.visible), 
            opts.items.visibleConf.max || (opts.items.visibleConf.max = opts.items.visible), 
            opts = in_getResponsiveValues(opts, d, e); else switch (opts.padding = cf_getPadding(opts.padding), 
            "top" == opts.align ? opts.align = "left" : "bottom" == opts.align && (opts.align = "right"), 
            opts.align) {
              case "center":
              case "left":
              case "right":
                "variable" != opts[opts.d.width] && (opts = in_getAlignPadding(opts, d), opts.usePadding = !0);
                break;

              default:
                opts.align = !1, opts.usePadding = 0 == opts.padding[0] && 0 == opts.padding[1] && 0 == opts.padding[2] && 0 == opts.padding[3] ? !1 : !0;
            }
            is_number(opts.scroll.duration) || (opts.scroll.duration = 500), is_undefined(opts.scroll.items) && (opts.scroll.items = opts.responsive || opts.items.visibleConf.variable || "*" != opts.items.filter ? "visible" : opts.items.visible), 
            opts.auto = $.extend(!0, {}, opts.scroll, opts.auto), opts.prev = $.extend(!0, {}, opts.scroll, opts.prev), 
            opts.next = $.extend(!0, {}, opts.scroll, opts.next), opts.pagination = $.extend(!0, {}, opts.scroll, opts.pagination), 
            opts.auto = go_complementAutoObject($tt0, opts.auto), opts.prev = go_complementPrevNextObject($tt0, opts.prev), 
            opts.next = go_complementPrevNextObject($tt0, opts.next), opts.pagination = go_complementPaginationObject($tt0, opts.pagination), 
            opts.swipe = go_complementSwipeObject($tt0, opts.swipe), opts.mousewheel = go_complementMousewheelObject($tt0, opts.mousewheel), 
            opts.synchronise && (opts.synchronise = cf_getSynchArr(opts.synchronise)), opts.auto.onPauseStart && (opts.auto.onTimeoutStart = opts.auto.onPauseStart, 
            deprecated("auto.onPauseStart", "auto.onTimeoutStart")), opts.auto.onPausePause && (opts.auto.onTimeoutPause = opts.auto.onPausePause, 
            deprecated("auto.onPausePause", "auto.onTimeoutPause")), opts.auto.onPauseEnd && (opts.auto.onTimeoutEnd = opts.auto.onPauseEnd, 
            deprecated("auto.onPauseEnd", "auto.onTimeoutEnd")), opts.auto.pauseDuration && (opts.auto.timeoutDuration = opts.auto.pauseDuration, 
            deprecated("auto.pauseDuration", "auto.timeoutDuration"));
        }, FN._build = function() {
            $cfs.data("_cfs_isCarousel", !0);
            var a = $cfs.children(), b = in_mapCss($cfs, [ "textAlign", "float", "position", "top", "right", "bottom", "left", "zIndex", "width", "height", "marginTop", "marginRight", "marginBottom", "marginLeft" ]), c = "relative";
            switch (b.position) {
              case "absolute":
              case "fixed":
                c = b.position;
            }
            "parent" == conf.wrapper ? sz_storeOrigCss($wrp) : $wrp.css(b), $wrp.css({
                overflow: "hidden",
                position: c
            }), sz_storeOrigCss($cfs), $cfs.data("_cfs_origCssZindex", b.zIndex), $cfs.css({
                textAlign: "left",
                "float": "none",
                position: "absolute",
                top: 0,
                right: "auto",
                bottom: "auto",
                left: 0,
                marginTop: 0,
                marginRight: 0,
                marginBottom: 0,
                marginLeft: 0
            }), sz_storeMargin(a, opts), sz_storeOrigCss(a), opts.responsive && sz_setResponsiveSizes(opts, a);
        }, FN._bind_events = function() {
            FN._unbind_events(), $cfs.bind(cf_e("stop", conf), function(a, b) {
                return a.stopPropagation(), crsl.isStopped || opts.auto.button && opts.auto.button.addClass(cf_c("stopped", conf)), 
                crsl.isStopped = !0, opts.auto.play && (opts.auto.play = !1, $cfs.trigger(cf_e("pause", conf), b)), 
                !0;
            }), $cfs.bind(cf_e("finish", conf), function(a) {
                return a.stopPropagation(), crsl.isScrolling && sc_stopScroll(scrl), !0;
            }), $cfs.bind(cf_e("pause", conf), function(a, b, c) {
                if (a.stopPropagation(), tmrs = sc_clearTimers(tmrs), b && crsl.isScrolling) {
                    scrl.isStopped = !0;
                    var d = getTime() - scrl.startTime;
                    scrl.duration -= d, scrl.pre && (scrl.pre.duration -= d), scrl.post && (scrl.post.duration -= d), 
                    sc_stopScroll(scrl, !1);
                }
                if (crsl.isPaused || crsl.isScrolling || c && (tmrs.timePassed += getTime() - tmrs.startTime), 
                crsl.isPaused || opts.auto.button && opts.auto.button.addClass(cf_c("paused", conf)), 
                crsl.isPaused = !0, opts.auto.onTimeoutPause) {
                    var e = opts.auto.timeoutDuration - tmrs.timePassed, f = 100 - Math.ceil(100 * e / opts.auto.timeoutDuration);
                    opts.auto.onTimeoutPause.call($tt0, f, e);
                }
                return !0;
            }), $cfs.bind(cf_e("play", conf), function(a, b, c, d) {
                a.stopPropagation(), tmrs = sc_clearTimers(tmrs);
                var e = [ b, c, d ], f = [ "string", "number", "boolean" ], g = cf_sortParams(e, f);
                if (b = g[0], c = g[1], d = g[2], "prev" != b && "next" != b && (b = crsl.direction), 
                is_number(c) || (c = 0), is_boolean(d) || (d = !1), d && (crsl.isStopped = !1, opts.auto.play = !0), 
                !opts.auto.play) return a.stopImmediatePropagation(), debug(conf, "Carousel stopped: Not scrolling.");
                crsl.isPaused && opts.auto.button && (opts.auto.button.removeClass(cf_c("stopped", conf)), 
                opts.auto.button.removeClass(cf_c("paused", conf))), crsl.isPaused = !1, tmrs.startTime = getTime();
                var h = opts.auto.timeoutDuration + c;
                return dur2 = h - tmrs.timePassed, perc = 100 - Math.ceil(100 * dur2 / h), opts.auto.progress && (tmrs.progress = setInterval(function() {
                    var a = getTime() - tmrs.startTime + tmrs.timePassed, b = Math.ceil(100 * a / h);
                    opts.auto.progress.updater.call(opts.auto.progress.bar[0], b);
                }, opts.auto.progress.interval)), tmrs.auto = setTimeout(function() {
                    opts.auto.progress && opts.auto.progress.updater.call(opts.auto.progress.bar[0], 100), 
                    opts.auto.onTimeoutEnd && opts.auto.onTimeoutEnd.call($tt0, perc, dur2), crsl.isScrolling ? $cfs.trigger(cf_e("play", conf), b) : $cfs.trigger(cf_e(b, conf), opts.auto);
                }, dur2), opts.auto.onTimeoutStart && opts.auto.onTimeoutStart.call($tt0, perc, dur2), 
                !0;
            }), $cfs.bind(cf_e("resume", conf), function(a) {
                return a.stopPropagation(), scrl.isStopped ? (scrl.isStopped = !1, crsl.isPaused = !1, 
                crsl.isScrolling = !0, scrl.startTime = getTime(), sc_startScroll(scrl, conf)) : $cfs.trigger(cf_e("play", conf)), 
                !0;
            }), $cfs.bind(cf_e("prev", conf) + " " + cf_e("next", conf), function(a, b, c, d, e) {
                if (a.stopPropagation(), crsl.isStopped || $cfs.is(":hidden")) return a.stopImmediatePropagation(), 
                debug(conf, "Carousel stopped or hidden: Not scrolling.");
                var f = is_number(opts.items.minimum) ? opts.items.minimum : opts.items.visible + 1;
                if (f > itms.total) return a.stopImmediatePropagation(), debug(conf, "Not enough items (" + itms.total + " total, " + f + " needed): Not scrolling.");
                var g = [ b, c, d, e ], h = [ "object", "number/string", "function", "boolean" ], i = cf_sortParams(g, h);
                b = i[0], c = i[1], d = i[2], e = i[3];
                var j = a.type.slice(conf.events.prefix.length);
                if (is_object(b) || (b = {}), is_function(d) && (b.onAfter = d), is_boolean(e) && (b.queue = e), 
                b = $.extend(!0, {}, opts[j], b), b.conditions && !b.conditions.call($tt0, j)) return a.stopImmediatePropagation(), 
                debug(conf, 'Callback "conditions" returned false.');
                if (!is_number(c)) {
                    if ("*" != opts.items.filter) c = "visible"; else for (var k = [ c, b.items, opts[j].items ], i = 0, l = k.length; l > i; i++) if (is_number(k[i]) || "page" == k[i] || "visible" == k[i]) {
                        c = k[i];
                        break;
                    }
                    switch (c) {
                      case "page":
                        return a.stopImmediatePropagation(), $cfs.triggerHandler(cf_e(j + "Page", conf), [ b, d ]);

                      case "visible":
                        opts.items.visibleConf.variable || "*" != opts.items.filter || (c = opts.items.visible);
                    }
                }
                if (scrl.isStopped) return $cfs.trigger(cf_e("resume", conf)), $cfs.trigger(cf_e("queue", conf), [ j, [ b, c, d ] ]), 
                a.stopImmediatePropagation(), debug(conf, "Carousel resumed scrolling.");
                if (b.duration > 0 && crsl.isScrolling) return b.queue && ("last" == b.queue && (queu = []), 
                ("first" != b.queue || 0 == queu.length) && $cfs.trigger(cf_e("queue", conf), [ j, [ b, c, d ] ])), 
                a.stopImmediatePropagation(), debug(conf, "Carousel currently scrolling.");
                if (tmrs.timePassed = 0, $cfs.trigger(cf_e("slide_" + j, conf), [ b, c ]), opts.synchronise) for (var m = opts.synchronise, n = [ b, c ], o = 0, l = m.length; l > o; o++) {
                    var p = j;
                    m[o][2] || (p = "prev" == p ? "next" : "prev"), m[o][1] || (n[0] = m[o][0].triggerHandler("_cfs_triggerEvent", [ "configuration", p ])), 
                    n[1] = c + m[o][3], m[o][0].trigger("_cfs_triggerEvent", [ "slide_" + p, n ]);
                }
                return !0;
            }), $cfs.bind(cf_e("slide_prev", conf), function(a, b, c) {
                a.stopPropagation();
                var d = $cfs.children();
                if (!opts.circular && 0 == itms.first) return opts.infinite && $cfs.trigger(cf_e("next", conf), itms.total - 1), 
                a.stopImmediatePropagation();
                if (sz_resetMargin(d, opts), !is_number(c)) {
                    if (opts.items.visibleConf.variable) c = gn_getVisibleItemsPrev(d, opts, itms.total - 1); else if ("*" != opts.items.filter) {
                        var e = is_number(b.items) ? b.items : gn_getVisibleOrg($cfs, opts);
                        c = gn_getScrollItemsPrevFilter(d, opts, itms.total - 1, e);
                    } else c = opts.items.visible;
                    c = cf_getAdjust(c, opts, b.items, $tt0);
                }
                if (opts.circular || itms.total - c < itms.first && (c = itms.total - itms.first), 
                opts.items.visibleConf.old = opts.items.visible, opts.items.visibleConf.variable) {
                    var f = cf_getItemsAdjust(gn_getVisibleItemsNext(d, opts, itms.total - c), opts, opts.items.visibleConf.adjust, $tt0);
                    f >= opts.items.visible + c && itms.total > c && (c++, f = cf_getItemsAdjust(gn_getVisibleItemsNext(d, opts, itms.total - c), opts, opts.items.visibleConf.adjust, $tt0)), 
                    opts.items.visible = f;
                } else if ("*" != opts.items.filter) {
                    var f = gn_getVisibleItemsNextFilter(d, opts, itms.total - c);
                    opts.items.visible = cf_getItemsAdjust(f, opts, opts.items.visibleConf.adjust, $tt0);
                }
                if (sz_resetMargin(d, opts, !0), 0 == c) return a.stopImmediatePropagation(), debug(conf, "0 items to scroll: Not scrolling.");
                for (debug(conf, "Scrolling " + c + " items backward."), itms.first += c; itms.first >= itms.total; ) itms.first -= itms.total;
                opts.circular || (0 == itms.first && b.onEnd && b.onEnd.call($tt0, "prev"), opts.infinite || nv_enableNavi(opts, itms.first, conf)), 
                $cfs.children().slice(itms.total - c, itms.total).prependTo($cfs), itms.total < opts.items.visible + c && $cfs.children().slice(0, opts.items.visible + c - itms.total).clone(!0).appendTo($cfs);
                var d = $cfs.children(), g = gi_getOldItemsPrev(d, opts, c), h = gi_getNewItemsPrev(d, opts), i = d.eq(c - 1), j = g.last(), k = h.last();
                sz_resetMargin(d, opts);
                var l = 0, m = 0;
                if (opts.align) {
                    var n = cf_getAlignPadding(h, opts);
                    l = n[0], m = n[1];
                }
                var o = 0 > l ? opts.padding[opts.d[3]] : 0, p = !1, q = $();
                if (c > opts.items.visible && (q = d.slice(opts.items.visibleConf.old, c), "directscroll" == b.fx)) {
                    var r = opts.items[opts.d.width];
                    p = q, i = k, sc_hideHiddenItems(p), opts.items[opts.d.width] = "variable";
                }
                var s = !1, t = ms_getTotalSize(d.slice(0, c), opts, "width"), u = cf_mapWrapperSizes(ms_getSizes(h, opts, !0), opts, !opts.usePadding), v = 0, w = {}, x = {}, y = {}, z = {}, A = {}, B = {}, C = {}, D = sc_getDuration(b, opts, c, t);
                switch (b.fx) {
                  case "cover":
                  case "cover-fade":
                    v = ms_getTotalSize(d.slice(0, opts.items.visible), opts, "width");
                }
                p && (opts.items[opts.d.width] = r), sz_resetMargin(d, opts, !0), m >= 0 && sz_resetMargin(j, opts, opts.padding[opts.d[1]]), 
                l >= 0 && sz_resetMargin(i, opts, opts.padding[opts.d[3]]), opts.align && (opts.padding[opts.d[1]] = m, 
                opts.padding[opts.d[3]] = l), B[opts.d.left] = -(t - o), C[opts.d.left] = -(v - o), 
                x[opts.d.left] = u[opts.d.width];
                var E = function() {}, F = function() {}, G = function() {}, H = function() {}, I = function() {}, J = function() {}, K = function() {}, L = function() {}, M = function() {}, N = function() {}, O = function() {};
                switch (b.fx) {
                  case "crossfade":
                  case "cover":
                  case "cover-fade":
                  case "uncover":
                  case "uncover-fade":
                    s = $cfs.clone(!0).appendTo($wrp);
                }
                switch (b.fx) {
                  case "crossfade":
                  case "uncover":
                  case "uncover-fade":
                    s.children().slice(0, c).remove(), s.children().slice(opts.items.visibleConf.old).remove();
                    break;

                  case "cover":
                  case "cover-fade":
                    s.children().slice(opts.items.visible).remove(), s.css(C);
                }
                if ($cfs.css(B), scrl = sc_setScroll(D, b.easing, conf), w[opts.d.left] = opts.usePadding ? opts.padding[opts.d[3]] : 0, 
                ("variable" == opts[opts.d.width] || "variable" == opts[opts.d.height]) && (E = function() {
                    $wrp.css(u);
                }, F = function() {
                    scrl.anims.push([ $wrp, u ]);
                }), opts.usePadding) {
                    switch (k.not(i).length && (y[opts.d.marginRight] = i.data("_cfs_origCssMargin"), 
                    0 > l ? i.css(y) : (K = function() {
                        i.css(y);
                    }, L = function() {
                        scrl.anims.push([ i, y ]);
                    })), b.fx) {
                      case "cover":
                      case "cover-fade":
                        s.children().eq(c - 1).css(y);
                    }
                    k.not(j).length && (z[opts.d.marginRight] = j.data("_cfs_origCssMargin"), G = function() {
                        j.css(z);
                    }, H = function() {
                        scrl.anims.push([ j, z ]);
                    }), m >= 0 && (A[opts.d.marginRight] = k.data("_cfs_origCssMargin") + opts.padding[opts.d[1]], 
                    I = function() {
                        k.css(A);
                    }, J = function() {
                        scrl.anims.push([ k, A ]);
                    });
                }
                O = function() {
                    $cfs.css(w);
                };
                var P = opts.items.visible + c - itms.total;
                N = function() {
                    if (P > 0 && ($cfs.children().slice(itms.total).remove(), g = $($cfs.children().slice(itms.total - (opts.items.visible - P)).get().concat($cfs.children().slice(0, P).get()))), 
                    sc_showHiddenItems(p), opts.usePadding) {
                        var a = $cfs.children().eq(opts.items.visible + c - 1);
                        a.css(opts.d.marginRight, a.data("_cfs_origCssMargin"));
                    }
                };
                var Q = sc_mapCallbackArguments(g, q, h, c, "prev", D, u);
                switch (M = function() {
                    sc_afterScroll($cfs, s, b), crsl.isScrolling = !1, clbk.onAfter = sc_fireCallbacks($tt0, b, "onAfter", Q, clbk), 
                    queu = sc_fireQueue($cfs, queu, conf), crsl.isPaused || $cfs.trigger(cf_e("play", conf));
                }, crsl.isScrolling = !0, tmrs = sc_clearTimers(tmrs), clbk.onBefore = sc_fireCallbacks($tt0, b, "onBefore", Q, clbk), 
                b.fx) {
                  case "none":
                    $cfs.css(w), E(), G(), I(), K(), O(), N(), M();
                    break;

                  case "fade":
                    scrl.anims.push([ $cfs, {
                        opacity: 0
                    }, function() {
                        E(), G(), I(), K(), O(), N(), scrl = sc_setScroll(D, b.easing, conf), scrl.anims.push([ $cfs, {
                            opacity: 1
                        }, M ]), sc_startScroll(scrl, conf);
                    } ]);
                    break;

                  case "crossfade":
                    $cfs.css({
                        opacity: 0
                    }), scrl.anims.push([ s, {
                        opacity: 0
                    } ]), scrl.anims.push([ $cfs, {
                        opacity: 1
                    }, M ]), F(), G(), I(), K(), O(), N();
                    break;

                  case "cover":
                    scrl.anims.push([ s, w, function() {
                        G(), I(), K(), O(), N(), M();
                    } ]), F();
                    break;

                  case "cover-fade":
                    scrl.anims.push([ $cfs, {
                        opacity: 0
                    } ]), scrl.anims.push([ s, w, function() {
                        G(), I(), K(), O(), N(), M();
                    } ]), F();
                    break;

                  case "uncover":
                    scrl.anims.push([ s, x, M ]), F(), G(), I(), K(), O(), N();
                    break;

                  case "uncover-fade":
                    $cfs.css({
                        opacity: 0
                    }), scrl.anims.push([ $cfs, {
                        opacity: 1
                    } ]), scrl.anims.push([ s, x, M ]), F(), G(), I(), K(), O(), N();
                    break;

                  default:
                    scrl.anims.push([ $cfs, w, function() {
                        N(), M();
                    } ]), F(), H(), J(), L();
                }
                return sc_startScroll(scrl, conf), cf_setCookie(opts.cookie, $cfs, conf), $cfs.trigger(cf_e("updatePageStatus", conf), [ !1, u ]), 
                !0;
            }), $cfs.bind(cf_e("slide_next", conf), function(a, b, c) {
                a.stopPropagation();
                var d = $cfs.children();
                if (!opts.circular && itms.first == opts.items.visible) return opts.infinite && $cfs.trigger(cf_e("prev", conf), itms.total - 1), 
                a.stopImmediatePropagation();
                if (sz_resetMargin(d, opts), !is_number(c)) {
                    if ("*" != opts.items.filter) {
                        var e = is_number(b.items) ? b.items : gn_getVisibleOrg($cfs, opts);
                        c = gn_getScrollItemsNextFilter(d, opts, 0, e);
                    } else c = opts.items.visible;
                    c = cf_getAdjust(c, opts, b.items, $tt0);
                }
                var f = 0 == itms.first ? itms.total : itms.first;
                if (!opts.circular) {
                    if (opts.items.visibleConf.variable) var g = gn_getVisibleItemsNext(d, opts, c), e = gn_getVisibleItemsPrev(d, opts, f - 1); else var g = opts.items.visible, e = opts.items.visible;
                    c + g > f && (c = f - e);
                }
                if (opts.items.visibleConf.old = opts.items.visible, opts.items.visibleConf.variable) {
                    for (var g = cf_getItemsAdjust(gn_getVisibleItemsNextTestCircular(d, opts, c, f), opts, opts.items.visibleConf.adjust, $tt0); opts.items.visible - c >= g && itms.total > c; ) c++, 
                    g = cf_getItemsAdjust(gn_getVisibleItemsNextTestCircular(d, opts, c, f), opts, opts.items.visibleConf.adjust, $tt0);
                    opts.items.visible = g;
                } else if ("*" != opts.items.filter) {
                    var g = gn_getVisibleItemsNextFilter(d, opts, c);
                    opts.items.visible = cf_getItemsAdjust(g, opts, opts.items.visibleConf.adjust, $tt0);
                }
                if (sz_resetMargin(d, opts, !0), 0 == c) return a.stopImmediatePropagation(), debug(conf, "0 items to scroll: Not scrolling.");
                for (debug(conf, "Scrolling " + c + " items forward."), itms.first -= c; 0 > itms.first; ) itms.first += itms.total;
                opts.circular || (itms.first == opts.items.visible && b.onEnd && b.onEnd.call($tt0, "next"), 
                opts.infinite || nv_enableNavi(opts, itms.first, conf)), itms.total < opts.items.visible + c && $cfs.children().slice(0, opts.items.visible + c - itms.total).clone(!0).appendTo($cfs);
                var d = $cfs.children(), h = gi_getOldItemsNext(d, opts), i = gi_getNewItemsNext(d, opts, c), j = d.eq(c - 1), k = h.last(), l = i.last();
                sz_resetMargin(d, opts);
                var m = 0, n = 0;
                if (opts.align) {
                    var o = cf_getAlignPadding(i, opts);
                    m = o[0], n = o[1];
                }
                var p = !1, q = $();
                if (c > opts.items.visibleConf.old && (q = d.slice(opts.items.visibleConf.old, c), 
                "directscroll" == b.fx)) {
                    var r = opts.items[opts.d.width];
                    p = q, j = k, sc_hideHiddenItems(p), opts.items[opts.d.width] = "variable";
                }
                var s = !1, t = ms_getTotalSize(d.slice(0, c), opts, "width"), u = cf_mapWrapperSizes(ms_getSizes(i, opts, !0), opts, !opts.usePadding), v = 0, w = {}, x = {}, y = {}, z = {}, A = {}, B = sc_getDuration(b, opts, c, t);
                switch (b.fx) {
                  case "uncover":
                  case "uncover-fade":
                    v = ms_getTotalSize(d.slice(0, opts.items.visibleConf.old), opts, "width");
                }
                p && (opts.items[opts.d.width] = r), opts.align && 0 > opts.padding[opts.d[1]] && (opts.padding[opts.d[1]] = 0), 
                sz_resetMargin(d, opts, !0), sz_resetMargin(k, opts, opts.padding[opts.d[1]]), opts.align && (opts.padding[opts.d[1]] = n, 
                opts.padding[opts.d[3]] = m), A[opts.d.left] = opts.usePadding ? opts.padding[opts.d[3]] : 0;
                var C = function() {}, D = function() {}, E = function() {}, F = function() {}, G = function() {}, H = function() {}, I = function() {}, J = function() {}, K = function() {};
                switch (b.fx) {
                  case "crossfade":
                  case "cover":
                  case "cover-fade":
                  case "uncover":
                  case "uncover-fade":
                    s = $cfs.clone(!0).appendTo($wrp), s.children().slice(opts.items.visibleConf.old).remove();
                }
                switch (b.fx) {
                  case "crossfade":
                  case "cover":
                  case "cover-fade":
                    $cfs.css("zIndex", 1), s.css("zIndex", 0);
                }
                if (scrl = sc_setScroll(B, b.easing, conf), w[opts.d.left] = -t, x[opts.d.left] = -v, 
                0 > m && (w[opts.d.left] += m), ("variable" == opts[opts.d.width] || "variable" == opts[opts.d.height]) && (C = function() {
                    $wrp.css(u);
                }, D = function() {
                    scrl.anims.push([ $wrp, u ]);
                }), opts.usePadding) {
                    var L = l.data("_cfs_origCssMargin");
                    n >= 0 && (L += opts.padding[opts.d[1]]), l.css(opts.d.marginRight, L), j.not(k).length && (z[opts.d.marginRight] = k.data("_cfs_origCssMargin")), 
                    E = function() {
                        k.css(z);
                    }, F = function() {
                        scrl.anims.push([ k, z ]);
                    };
                    var M = j.data("_cfs_origCssMargin");
                    m > 0 && (M += opts.padding[opts.d[3]]), y[opts.d.marginRight] = M, G = function() {
                        j.css(y);
                    }, H = function() {
                        scrl.anims.push([ j, y ]);
                    };
                }
                K = function() {
                    $cfs.css(A);
                };
                var N = opts.items.visible + c - itms.total;
                J = function() {
                    N > 0 && $cfs.children().slice(itms.total).remove();
                    var a = $cfs.children().slice(0, c).appendTo($cfs).last();
                    if (N > 0 && (i = gi_getCurrentItems(d, opts)), sc_showHiddenItems(p), opts.usePadding) {
                        if (itms.total < opts.items.visible + c) {
                            var b = $cfs.children().eq(opts.items.visible - 1);
                            b.css(opts.d.marginRight, b.data("_cfs_origCssMargin") + opts.padding[opts.d[1]]);
                        }
                        a.css(opts.d.marginRight, a.data("_cfs_origCssMargin"));
                    }
                };
                var O = sc_mapCallbackArguments(h, q, i, c, "next", B, u);
                switch (I = function() {
                    $cfs.css("zIndex", $cfs.data("_cfs_origCssZindex")), sc_afterScroll($cfs, s, b), 
                    crsl.isScrolling = !1, clbk.onAfter = sc_fireCallbacks($tt0, b, "onAfter", O, clbk), 
                    queu = sc_fireQueue($cfs, queu, conf), crsl.isPaused || $cfs.trigger(cf_e("play", conf));
                }, crsl.isScrolling = !0, tmrs = sc_clearTimers(tmrs), clbk.onBefore = sc_fireCallbacks($tt0, b, "onBefore", O, clbk), 
                b.fx) {
                  case "none":
                    $cfs.css(w), C(), E(), G(), K(), J(), I();
                    break;

                  case "fade":
                    scrl.anims.push([ $cfs, {
                        opacity: 0
                    }, function() {
                        C(), E(), G(), K(), J(), scrl = sc_setScroll(B, b.easing, conf), scrl.anims.push([ $cfs, {
                            opacity: 1
                        }, I ]), sc_startScroll(scrl, conf);
                    } ]);
                    break;

                  case "crossfade":
                    $cfs.css({
                        opacity: 0
                    }), scrl.anims.push([ s, {
                        opacity: 0
                    } ]), scrl.anims.push([ $cfs, {
                        opacity: 1
                    }, I ]), D(), E(), G(), K(), J();
                    break;

                  case "cover":
                    $cfs.css(opts.d.left, $wrp[opts.d.width]()), scrl.anims.push([ $cfs, A, I ]), D(), 
                    E(), G(), J();
                    break;

                  case "cover-fade":
                    $cfs.css(opts.d.left, $wrp[opts.d.width]()), scrl.anims.push([ s, {
                        opacity: 0
                    } ]), scrl.anims.push([ $cfs, A, I ]), D(), E(), G(), J();
                    break;

                  case "uncover":
                    scrl.anims.push([ s, x, I ]), D(), E(), G(), K(), J();
                    break;

                  case "uncover-fade":
                    $cfs.css({
                        opacity: 0
                    }), scrl.anims.push([ $cfs, {
                        opacity: 1
                    } ]), scrl.anims.push([ s, x, I ]), D(), E(), G(), K(), J();
                    break;

                  default:
                    scrl.anims.push([ $cfs, w, function() {
                        K(), J(), I();
                    } ]), D(), F(), H();
                }
                return sc_startScroll(scrl, conf), cf_setCookie(opts.cookie, $cfs, conf), $cfs.trigger(cf_e("updatePageStatus", conf), [ !1, u ]), 
                !0;
            }), $cfs.bind(cf_e("slideTo", conf), function(a, b, c, d, e, f, g) {
                a.stopPropagation();
                var h = [ b, c, d, e, f, g ], i = [ "string/number/object", "number", "boolean", "object", "string", "function" ], j = cf_sortParams(h, i);
                return e = j[3], f = j[4], g = j[5], b = gn_getItemIndex(j[0], j[1], j[2], itms, $cfs), 
                0 == b ? !1 : (is_object(e) || (e = !1), "prev" != f && "next" != f && (f = opts.circular ? itms.total / 2 >= b ? "next" : "prev" : 0 == itms.first || itms.first > b ? "next" : "prev"), 
                "prev" == f && (b = itms.total - b), $cfs.trigger(cf_e(f, conf), [ e, b, g ]), !0);
            }), $cfs.bind(cf_e("prevPage", conf), function(a, b, c) {
                a.stopPropagation();
                var d = $cfs.triggerHandler(cf_e("currentPage", conf));
                return $cfs.triggerHandler(cf_e("slideToPage", conf), [ d - 1, b, "prev", c ]);
            }), $cfs.bind(cf_e("nextPage", conf), function(a, b, c) {
                a.stopPropagation();
                var d = $cfs.triggerHandler(cf_e("currentPage", conf));
                return $cfs.triggerHandler(cf_e("slideToPage", conf), [ d + 1, b, "next", c ]);
            }), $cfs.bind(cf_e("slideToPage", conf), function(a, b, c, d, e) {
                a.stopPropagation(), is_number(b) || (b = $cfs.triggerHandler(cf_e("currentPage", conf)));
                var f = opts.pagination.items || opts.items.visible, g = Math.ceil(itms.total / f) - 1;
                return 0 > b && (b = g), b > g && (b = 0), $cfs.triggerHandler(cf_e("slideTo", conf), [ b * f, 0, !0, c, d, e ]);
            }), $cfs.bind(cf_e("jumpToStart", conf), function(a, b) {
                if (a.stopPropagation(), b = b ? gn_getItemIndex(b, 0, !0, itms, $cfs) : 0, b += itms.first, 
                0 != b) {
                    if (itms.total > 0) for (;b > itms.total; ) b -= itms.total;
                    $cfs.prepend($cfs.children().slice(b, itms.total));
                }
                return !0;
            }), $cfs.bind(cf_e("synchronise", conf), function(a, b) {
                if (a.stopPropagation(), b) b = cf_getSynchArr(b); else {
                    if (!opts.synchronise) return debug(conf, "No carousel to synchronise.");
                    b = opts.synchronise;
                }
                for (var c = $cfs.triggerHandler(cf_e("currentPosition", conf)), d = !0, e = 0, f = b.length; f > e; e++) b[e][0].triggerHandler(cf_e("slideTo", conf), [ c, b[e][3], !0 ]) || (d = !1);
                return d;
            }), $cfs.bind(cf_e("queue", conf), function(a, b, c) {
                return a.stopPropagation(), is_function(b) ? b.call($tt0, queu) : is_array(b) ? queu = b : is_undefined(b) || queu.push([ b, c ]), 
                queu;
            }), $cfs.bind(cf_e("insertItem", conf), function(a, b, c, d, e) {
                a.stopPropagation();
                var f = [ b, c, d, e ], g = [ "string/object", "string/number/object", "boolean", "number" ], h = cf_sortParams(f, g);
                if (b = h[0], c = h[1], d = h[2], e = h[3], is_object(b) && !is_jquery(b) ? b = $(b) : is_string(b) && (b = $(b)), 
                !is_jquery(b) || 0 == b.length) return debug(conf, "Not a valid object.");
                is_undefined(c) && (c = "end"), sz_storeMargin(b, opts), sz_storeOrigCss(b);
                var i = c, j = "before";
                "end" == c ? d ? (0 == itms.first ? (c = itms.total - 1, j = "after") : (c = itms.first, 
                itms.first += b.length), 0 > c && (c = 0)) : (c = itms.total - 1, j = "after") : c = gn_getItemIndex(c, e, d, itms, $cfs);
                var k = $cfs.children().eq(c);
                return k.length ? k[j](b) : (debug(conf, "Correct insert-position not found! Appending item to the end."), 
                $cfs.append(b)), "end" == i || d || itms.first > c && (itms.first += b.length), 
                itms.total = $cfs.children().length, itms.first >= itms.total && (itms.first -= itms.total), 
                $cfs.trigger(cf_e("updateSizes", conf)), $cfs.trigger(cf_e("linkAnchors", conf)), 
                !0;
            }), $cfs.bind(cf_e("removeItem", conf), function(a, b, c, d) {
                a.stopPropagation();
                var e = [ b, c, d ], f = [ "string/number/object", "boolean", "number" ], g = cf_sortParams(e, f);
                if (b = g[0], c = g[1], d = g[2], b instanceof $ && b.length > 1) return h = $(), 
                b.each(function() {
                    var a = $cfs.trigger(cf_e("removeItem", conf), [ $(this), c, d ]);
                    a && (h = h.add(a));
                }), h;
                if (is_undefined(b) || "end" == b) h = $cfs.children().last(); else {
                    b = gn_getItemIndex(b, d, c, itms, $cfs);
                    var h = $cfs.children().eq(b);
                    h.length && itms.first > b && (itms.first -= h.length);
                }
                return h && h.length && (h.detach(), itms.total = $cfs.children().length, $cfs.trigger(cf_e("updateSizes", conf))), 
                h;
            }), $cfs.bind(cf_e("onBefore", conf) + " " + cf_e("onAfter", conf), function(a, b) {
                a.stopPropagation();
                var c = a.type.slice(conf.events.prefix.length);
                return is_array(b) && (clbk[c] = b), is_function(b) && clbk[c].push(b), clbk[c];
            }), $cfs.bind(cf_e("currentPosition", conf), function(a, b) {
                if (a.stopPropagation(), 0 == itms.first) var c = 0; else var c = itms.total - itms.first;
                return is_function(b) && b.call($tt0, c), c;
            }), $cfs.bind(cf_e("currentPage", conf), function(a, b) {
                a.stopPropagation();
                var c, d = opts.pagination.items || opts.items.visible, e = Math.ceil(itms.total / d - 1);
                return c = 0 == itms.first ? 0 : itms.first < itms.total % d ? 0 : itms.first != d || opts.circular ? Math.round((itms.total - itms.first) / d) : e, 
                0 > c && (c = 0), c > e && (c = e), is_function(b) && b.call($tt0, c), c;
            }), $cfs.bind(cf_e("currentVisible", conf), function(a, b) {
                a.stopPropagation();
                var c = gi_getCurrentItems($cfs.children(), opts);
                return is_function(b) && b.call($tt0, c), c;
            }), $cfs.bind(cf_e("slice", conf), function(a, b, c, d) {
                if (a.stopPropagation(), 0 == itms.total) return !1;
                var e = [ b, c, d ], f = [ "number", "number", "function" ], g = cf_sortParams(e, f);
                if (b = is_number(g[0]) ? g[0] : 0, c = is_number(g[1]) ? g[1] : itms.total, d = g[2], 
                b += itms.first, c += itms.first, items.total > 0) {
                    for (;b > itms.total; ) b -= itms.total;
                    for (;c > itms.total; ) c -= itms.total;
                    for (;0 > b; ) b += itms.total;
                    for (;0 > c; ) c += itms.total;
                }
                var h, i = $cfs.children();
                return h = c > b ? i.slice(b, c) : $(i.slice(b, itms.total).get().concat(i.slice(0, c).get())), 
                is_function(d) && d.call($tt0, h), h;
            }), $cfs.bind(cf_e("isPaused", conf) + " " + cf_e("isStopped", conf) + " " + cf_e("isScrolling", conf), function(a, b) {
                a.stopPropagation();
                var c = a.type.slice(conf.events.prefix.length), d = crsl[c];
                return is_function(b) && b.call($tt0, d), d;
            }), $cfs.bind(cf_e("configuration", conf), function(e, a, b, c) {
                e.stopPropagation();
                var reInit = !1;
                if (is_function(a)) a.call($tt0, opts); else if (is_object(a)) opts_orig = $.extend(!0, {}, opts_orig, a), 
                b !== !1 ? reInit = !0 : opts = $.extend(!0, {}, opts, a); else if (!is_undefined(a)) if (is_function(b)) {
                    var val = eval("opts." + a);
                    is_undefined(val) && (val = ""), b.call($tt0, val);
                } else {
                    if (is_undefined(b)) return eval("opts." + a);
                    "boolean" != typeof c && (c = !0), eval("opts_orig." + a + " = b"), c !== !1 ? reInit = !0 : eval("opts." + a + " = b");
                }
                if (reInit) {
                    sz_resetMargin($cfs.children(), opts), FN._init(opts_orig), FN._bind_buttons();
                    var sz = sz_setSizes($cfs, opts);
                    $cfs.trigger(cf_e("updatePageStatus", conf), [ !0, sz ]);
                }
                return opts;
            }), $cfs.bind(cf_e("linkAnchors", conf), function(a, b, c) {
                return a.stopPropagation(), is_undefined(b) ? b = $("body") : is_string(b) && (b = $(b)), 
                is_jquery(b) && 0 != b.length ? (is_string(c) || (c = "a.caroufredsel"), b.find(c).each(function() {
                    var a = this.hash || "";
                    a.length > 0 && -1 != $cfs.children().index($(a)) && $(this).unbind("click").click(function(b) {
                        b.preventDefault(), $cfs.trigger(cf_e("slideTo", conf), a);
                    });
                }), !0) : debug(conf, "Not a valid object.");
            }), $cfs.bind(cf_e("updatePageStatus", conf), function(a, b) {
                if (a.stopPropagation(), opts.pagination.container) {
                    var c = opts.pagination.items || opts.items.visible, d = Math.ceil(itms.total / c);
                    b && (opts.pagination.anchorBuilder && (opts.pagination.container.children().remove(), 
                    opts.pagination.container.each(function() {
                        for (var a = 0; d > a; a++) {
                            var b = $cfs.children().eq(gn_getItemIndex(a * c, 0, !0, itms, $cfs));
                            $(this).append(opts.pagination.anchorBuilder.call(b[0], a + 1));
                        }
                    })), opts.pagination.container.each(function() {
                        $(this).children().unbind(opts.pagination.event).each(function(a) {
                            $(this).bind(opts.pagination.event, function(b) {
                                b.preventDefault(), $cfs.trigger(cf_e("slideTo", conf), [ a * c, -opts.pagination.deviation, !0, opts.pagination ]);
                            });
                        });
                    }));
                    var e = $cfs.triggerHandler(cf_e("currentPage", conf)) + opts.pagination.deviation;
                    return e >= d && (e = 0), 0 > e && (e = d - 1), opts.pagination.container.each(function() {
                        $(this).children().removeClass(cf_c("selected", conf)).eq(e).addClass(cf_c("selected", conf));
                    }), !0;
                }
            }), $cfs.bind(cf_e("updateSizes", conf), function() {
                var a = opts.items.visible, b = $cfs.children(), c = ms_getParentSize($wrp, opts, "width");
                if (itms.total = b.length, crsl.primarySizePercentage ? (opts.maxDimension = c, 
                opts[opts.d.width] = ms_getPercentage(c, crsl.primarySizePercentage)) : opts.maxDimension = ms_getMaxDimension(opts, c), 
                opts.responsive ? (opts.items.width = opts.items.sizesConf.width, opts.items.height = opts.items.sizesConf.height, 
                opts = in_getResponsiveValues(opts, b, c), a = opts.items.visible, sz_setResponsiveSizes(opts, b)) : opts.items.visibleConf.variable ? a = gn_getVisibleItemsNext(b, opts, 0) : "*" != opts.items.filter && (a = gn_getVisibleItemsNextFilter(b, opts, 0)), 
                !opts.circular && 0 != itms.first && a > itms.first) {
                    if (opts.items.visibleConf.variable) var d = gn_getVisibleItemsPrev(b, opts, itms.first) - itms.first; else if ("*" != opts.items.filter) var d = gn_getVisibleItemsPrevFilter(b, opts, itms.first) - itms.first; else var d = opts.items.visible - itms.first;
                    debug(conf, "Preventing non-circular: sliding " + d + " items backward."), $cfs.trigger(cf_e("prev", conf), d);
                }
                opts.items.visible = cf_getItemsAdjust(a, opts, opts.items.visibleConf.adjust, $tt0), 
                opts.items.visibleConf.old = opts.items.visible, opts = in_getAlignPadding(opts, b);
                var e = sz_setSizes($cfs, opts);
                return $cfs.trigger(cf_e("updatePageStatus", conf), [ !0, e ]), nv_showNavi(opts, itms.total, conf), 
                nv_enableNavi(opts, itms.first, conf), e;
            }), $cfs.bind(cf_e("destroy", conf), function(a, b) {
                return a.stopPropagation(), tmrs = sc_clearTimers(tmrs), $cfs.data("_cfs_isCarousel", !1), 
                $cfs.trigger(cf_e("finish", conf)), b && $cfs.trigger(cf_e("jumpToStart", conf)), 
                sz_restoreOrigCss($cfs.children()), sz_restoreOrigCss($cfs), FN._unbind_events(), 
                FN._unbind_buttons(), "parent" == conf.wrapper ? sz_restoreOrigCss($wrp) : $wrp.replaceWith($cfs), 
                !0;
            }), $cfs.bind(cf_e("debug", conf), function() {
                return debug(conf, "Carousel width: " + opts.width), debug(conf, "Carousel height: " + opts.height), 
                debug(conf, "Item widths: " + opts.items.width), debug(conf, "Item heights: " + opts.items.height), 
                debug(conf, "Number of items visible: " + opts.items.visible), opts.auto.play && debug(conf, "Number of items scrolled automatically: " + opts.auto.items), 
                opts.prev.button && debug(conf, "Number of items scrolled backward: " + opts.prev.items), 
                opts.next.button && debug(conf, "Number of items scrolled forward: " + opts.next.items), 
                conf.debug;
            }), $cfs.bind("_cfs_triggerEvent", function(a, b, c) {
                return a.stopPropagation(), $cfs.triggerHandler(cf_e(b, conf), c);
            });
        }, FN._unbind_events = function() {
            $cfs.unbind(cf_e("", conf)), $cfs.unbind(cf_e("", conf, !1)), $cfs.unbind("_cfs_triggerEvent");
        }, FN._bind_buttons = function() {
            if (FN._unbind_buttons(), nv_showNavi(opts, itms.total, conf), nv_enableNavi(opts, itms.first, conf), 
            opts.auto.pauseOnHover) {
                var a = bt_pauseOnHoverConfig(opts.auto.pauseOnHover);
                $wrp.bind(cf_e("mouseenter", conf, !1), function() {
                    $cfs.trigger(cf_e("pause", conf), a);
                }).bind(cf_e("mouseleave", conf, !1), function() {
                    $cfs.trigger(cf_e("resume", conf));
                });
            }
            if (opts.auto.button && opts.auto.button.bind(cf_e(opts.auto.event, conf, !1), function(a) {
                a.preventDefault();
                var b = !1, c = null;
                crsl.isPaused ? b = "play" : opts.auto.pauseOnEvent && (b = "pause", c = bt_pauseOnHoverConfig(opts.auto.pauseOnEvent)), 
                b && $cfs.trigger(cf_e(b, conf), c);
            }), opts.prev.button && (opts.prev.button.bind(cf_e(opts.prev.event, conf, !1), function(a) {
                a.preventDefault(), $cfs.trigger(cf_e("prev", conf));
            }), opts.prev.pauseOnHover)) {
                var a = bt_pauseOnHoverConfig(opts.prev.pauseOnHover);
                opts.prev.button.bind(cf_e("mouseenter", conf, !1), function() {
                    $cfs.trigger(cf_e("pause", conf), a);
                }).bind(cf_e("mouseleave", conf, !1), function() {
                    $cfs.trigger(cf_e("resume", conf));
                });
            }
            if (opts.next.button && (opts.next.button.bind(cf_e(opts.next.event, conf, !1), function(a) {
                a.preventDefault(), $cfs.trigger(cf_e("next", conf));
            }), opts.next.pauseOnHover)) {
                var a = bt_pauseOnHoverConfig(opts.next.pauseOnHover);
                opts.next.button.bind(cf_e("mouseenter", conf, !1), function() {
                    $cfs.trigger(cf_e("pause", conf), a);
                }).bind(cf_e("mouseleave", conf, !1), function() {
                    $cfs.trigger(cf_e("resume", conf));
                });
            }
            if (opts.pagination.container && opts.pagination.pauseOnHover) {
                var a = bt_pauseOnHoverConfig(opts.pagination.pauseOnHover);
                opts.pagination.container.bind(cf_e("mouseenter", conf, !1), function() {
                    $cfs.trigger(cf_e("pause", conf), a);
                }).bind(cf_e("mouseleave", conf, !1), function() {
                    $cfs.trigger(cf_e("resume", conf));
                });
            }
            if ((opts.prev.key || opts.next.key) && $(document).bind(cf_e("keyup", conf, !1, !0, !0), function(a) {
                var b = a.keyCode;
                b == opts.next.key && (a.preventDefault(), $cfs.trigger(cf_e("next", conf))), b == opts.prev.key && (a.preventDefault(), 
                $cfs.trigger(cf_e("prev", conf)));
            }), opts.pagination.keys && $(document).bind(cf_e("keyup", conf, !1, !0, !0), function(a) {
                var b = a.keyCode;
                b >= 49 && 58 > b && (b = (b - 49) * opts.items.visible, itms.total >= b && (a.preventDefault(), 
                $cfs.trigger(cf_e("slideTo", conf), [ b, 0, !0, opts.pagination ])));
            }), $.fn.swipe) {
                var b = "ontouchstart" in window;
                if (b && opts.swipe.onTouch || !b && opts.swipe.onMouse) {
                    var c = $.extend(!0, {}, opts.prev, opts.swipe), d = $.extend(!0, {}, opts.next, opts.swipe), e = function() {
                        $cfs.trigger(cf_e("prev", conf), [ c ]);
                    }, f = function() {
                        $cfs.trigger(cf_e("next", conf), [ d ]);
                    };
                    switch (opts.direction) {
                      case "up":
                      case "down":
                        opts.swipe.options.swipeUp = f, opts.swipe.options.swipeDown = e;
                        break;

                      default:
                        opts.swipe.options.swipeLeft = f, opts.swipe.options.swipeRight = e;
                    }
                    crsl.swipe && $cfs.swipe("destroy"), $wrp.swipe(opts.swipe.options), $wrp.css("cursor", "move"), 
                    crsl.swipe = !0;
                }
            }
            if ($.fn.mousewheel && opts.mousewheel) {
                var g = $.extend(!0, {}, opts.prev, opts.mousewheel), h = $.extend(!0, {}, opts.next, opts.mousewheel);
                crsl.mousewheel && $wrp.unbind(cf_e("mousewheel", conf, !1)), $wrp.bind(cf_e("mousewheel", conf, !1), function(a, b) {
                    a.preventDefault(), b > 0 ? $cfs.trigger(cf_e("prev", conf), [ g ]) : $cfs.trigger(cf_e("next", conf), [ h ]);
                }), crsl.mousewheel = !0;
            }
            if (opts.auto.play && $cfs.trigger(cf_e("play", conf), opts.auto.delay), crsl.upDateOnWindowResize) {
                var i = function() {
                    $cfs.trigger(cf_e("finish", conf)), opts.auto.pauseOnResize && !crsl.isPaused && $cfs.trigger(cf_e("play", conf)), 
                    sz_resetMargin($cfs.children(), opts), $cfs.trigger(cf_e("updateSizes", conf));
                }, j = $(window), k = null;
                if ($.debounce && "debounce" == conf.onWindowResize) k = $.debounce(200, i); else if ($.throttle && "throttle" == conf.onWindowResize) k = $.throttle(300, i); else {
                    var l = 0, m = 0;
                    k = function() {
                        var a = j.width(), b = j.height();
                        (a != l || b != m) && (i(), l = a, m = b);
                    };
                }
                j.bind(cf_e("resize", conf, !1, !0, !0), k);
            }
        }, FN._unbind_buttons = function() {
            var a = (cf_e("", conf), cf_e("", conf, !1));
            ns3 = cf_e("", conf, !1, !0, !0), $(document).unbind(ns3), $(window).unbind(ns3), 
            $wrp.unbind(a), opts.auto.button && opts.auto.button.unbind(a), opts.prev.button && opts.prev.button.unbind(a), 
            opts.next.button && opts.next.button.unbind(a), opts.pagination.container && (opts.pagination.container.unbind(a), 
            opts.pagination.anchorBuilder && opts.pagination.container.children().remove()), 
            crsl.swipe && ($cfs.swipe("destroy"), $wrp.css("cursor", "default"), crsl.swipe = !1), 
            crsl.mousewheel && (crsl.mousewheel = !1), nv_showNavi(opts, "hide", conf), nv_enableNavi(opts, "removeClass", conf);
        }, is_boolean(configs) && (configs = {
            debug: configs
        });
        var crsl = {
            direction: "next",
            isPaused: !0,
            isScrolling: !1,
            isStopped: !1,
            mousewheel: !1,
            swipe: !1
        }, itms = {
            total: $cfs.children().length,
            first: 0
        }, tmrs = {
            auto: null,
            progress: null,
            startTime: getTime(),
            timePassed: 0
        }, scrl = {
            isStopped: !1,
            duration: 0,
            startTime: 0,
            easing: "",
            anims: []
        }, clbk = {
            onBefore: [],
            onAfter: []
        }, queu = [], conf = $.extend(!0, {}, $.fn.carouFredSel.configs, configs), opts = {}, opts_orig = $.extend(!0, {}, options), $wrp = "parent" == conf.wrapper ? $cfs.parent() : $cfs.wrap("<" + conf.wrapper.element + ' class="' + conf.wrapper.classname + '" />').parent();
        if (conf.selector = $cfs.selector, conf.serialNumber = $.fn.carouFredSel.serialNumber++, 
        conf.transition = conf.transition && $.fn.transition ? "transition" : "animate", 
        FN._init(opts_orig, !0, starting_position), FN._build(), FN._bind_events(), FN._bind_buttons(), 
        is_array(opts.items.start)) var start_arr = opts.items.start; else {
            var start_arr = [];
            0 != opts.items.start && start_arr.push(opts.items.start);
        }
        if (opts.cookie && start_arr.unshift(parseInt(cf_getCookie(opts.cookie), 10)), start_arr.length > 0) for (var a = 0, l = start_arr.length; l > a; a++) {
            var s = start_arr[a];
            if (0 != s) {
                if (s === !0) {
                    if (s = window.location.hash, 1 > s.length) continue;
                } else "random" === s && (s = Math.floor(Math.random() * itms.total));
                if ($cfs.triggerHandler(cf_e("slideTo", conf), [ s, 0, !0, {
                    fx: "none"
                } ])) break;
            }
        }
        var siz = sz_setSizes($cfs, opts), itm = gi_getCurrentItems($cfs.children(), opts);
        return opts.onCreate && opts.onCreate.call($tt0, {
            width: siz.width,
            height: siz.height,
            items: itm
        }), $cfs.trigger(cf_e("updatePageStatus", conf), [ !0, siz ]), $cfs.trigger(cf_e("linkAnchors", conf)), 
        conf.debug && $cfs.trigger(cf_e("debug", conf)), $cfs;
    }, $.fn.carouFredSel.serialNumber = 1, $.fn.carouFredSel.defaults = {
        synchronise: !1,
        infinite: !0,
        circular: !0,
        responsive: !1,
        direction: "left",
        items: {
            start: 0
        },
        scroll: {
            easing: "swing",
            duration: 500,
            pauseOnHover: !1,
            event: "click",
            queue: !1
        }
    }, $.fn.carouFredSel.configs = {
        debug: !1,
        transition: !1,
        onWindowResize: "throttle",
        events: {
            prefix: "",
            namespace: "cfs"
        },
        wrapper: {
            element: "div",
            classname: "caroufredsel_wrapper"
        },
        classnames: {}
    }, $.fn.carouFredSel.pageAnchorBuilder = function(a) {
        return '<a href="#"><span>' + a + "</span></a>";
    }, $.fn.carouFredSel.progressbarUpdater = function(a) {
        $(this).css("width", a + "%");
    }, $.fn.carouFredSel.cookie = {
        get: function(a) {
            a += "=";
            for (var b = document.cookie.split(";"), c = 0, d = b.length; d > c; c++) {
                for (var e = b[c]; " " == e.charAt(0); ) e = e.slice(1);
                if (0 == e.indexOf(a)) return e.slice(a.length);
            }
            return 0;
        },
        set: function(a, b, c) {
            var d = "";
            if (c) {
                var e = new Date();
                e.setTime(e.getTime() + 864e5 * c), d = "; expires=" + e.toGMTString();
            }
            document.cookie = a + "=" + b + d + "; path=/";
        },
        remove: function(a) {
            $.fn.carouFredSel.cookie.set(a, "", -1);
        }
    }, $.extend($.easing, {
        quadratic: function(a) {
            var b = a * a;
            return a * (-b * a + 4 * b - 6 * a + 4);
        },
        cubic: function(a) {
            return a * (4 * a * a - 9 * a + 6);
        },
        elastic: function(a) {
            var b = a * a;
            return a * (33 * b * b - 106 * b * a + 126 * b - 67 * a + 15);
        }
    }));
}(jQuery);